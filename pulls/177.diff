diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java b/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java
index 6bef3a2..dc7d977 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java
@@ -413,7 +413,7 @@ public void onClick(View v) {
                     Toast.makeText(getApplicationContext(), "Reraise Value must be 1 minute or greater", Toast.LENGTH_LONG).show();
                     return;
                 } else if (alertReraise >= defaultSnooze) {
-                    Toast.makeText(getApplicationContext(), "Reraise Value must less than snooze length", Toast.LENGTH_LONG).show();
+                    Toast.makeText(getApplicationContext(), "Reraise Value must be less than snooze length", Toast.LENGTH_LONG).show();
                     return;
                 }
 
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java b/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java
index f0d9232..cd7b105 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java
@@ -58,6 +58,7 @@ public static boolean alertSnoozeOver() {
     public void snooze(int minutes) {
         next_alert_at = new Date().getTime() + minutes * 60000;
         is_snoozed = true;
+        last_alerted_at = alert_started_at;
         save();
     }
 
@@ -117,7 +118,7 @@ public static AlertType alertTypegetOnly() {
         return alert;
     }
 
-    public static void Create(String alert_uuid, boolean is_snoozed, Long next_alert_at) {
+    public static ActiveBgAlert Create(String alert_uuid, boolean is_snoozed, Long next_alert_at) {
         Log.d(TAG, "ActiveBgAlert Create called");
         ActiveBgAlert aba = getOnly();
         if (aba == null) {
@@ -129,6 +130,7 @@ public static void Create(String alert_uuid, boolean is_snoozed, Long next_alert
         aba.next_alert_at = next_alert_at;
         aba.alert_started_at = new Date().getTime();
         aba.save();
+        return aba;
     }
 
     public static void ClearData() {
@@ -154,8 +156,10 @@ public static void ClearIfSnoozeFinished() {
     // If we were snoozed, we update the snooze to false, and update the start time.
     // return the time in minutes from the time playing the alert has started
     public int getUpdatePlayTime() {
+        //This method should get only calle if the snooze time is over. (or initial rerise period is over if never snoozed)
         if(is_snoozed) {
             is_snoozed = false;
+            last_alerted_at = alert_started_at; // after the snooze period reset last_started_at to resolve problems with last of multiple rerise intervals overlapping the snooze interval
             alert_started_at = new Date().getTime();
             save();
         }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
index bbf5e55..045acab 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
@@ -29,7 +29,6 @@
     private MediaPlayer mediaPlayer;
     int volumeBeforeAlert;
     int volumeForThisAlert;
-    Context context;
 
     final static int ALERT_PROFILE_HIGH = 1;
     final static int ALERT_PROFILE_ASCENDING = 2;
@@ -60,8 +59,10 @@ public synchronized  void startAlert(Context ctx, boolean trendingToAlertEnd, Al
 
         stopAlert(ctx, true, false);
         int alertIn = newAlert.minutes_between;
-        if(alertIn < 1) { alertIn = 1; }
-        ActiveBgAlert.Create(newAlert.uuid, false, new Date().getTime() + alertIn * 60000 );
+        if(alertIn < 1 || AlertPlayer.isAscendingMode(ctx)) { alertIn = 1; }
+        ActiveBgAlert aba = ActiveBgAlert.Create(newAlert.uuid, false, new Date().getTime() + alertIn * 60000);
+        aba.last_alerted_at = System.currentTimeMillis();
+        aba.save();
         Vibrate(ctx, newAlert, bgValue, newAlert.override_silent_mode, 0);
     }
 
@@ -96,7 +97,7 @@ public synchronized  void Snooze(Context ctx, int repeatTime) {
     public synchronized  void PreSnooze(Context ctx, String uuid, int repeatTime) {
         Log.i(TAG, "PreSnooze called repeatTime = "+ repeatTime);
         stopAlert(ctx, true, false);
-        ActiveBgAlert.Create(uuid, true, new Date().getTime() + repeatTime * 60000 );
+        ActiveBgAlert.Create(uuid, true, new Date().getTime() + repeatTime * 60000);
         ActiveBgAlert activeBgAlert = ActiveBgAlert.getOnly();
         if (activeBgAlert  == null) {
             Log.wtf(TAG, "Just created the alert, where did it go...");
@@ -118,22 +119,33 @@ public void ClockTick(Context ctx, boolean trendingToAlertEnd, String bgValue)
             return;
         }
         if(activeBgAlert.ready_to_alarm()) {
-            stopAlert(ctx, false, false);
-
             int timeFromStartPlaying = activeBgAlert.getUpdatePlayTime();
-            AlertType alert = AlertType.get_alert(activeBgAlert.alert_uuid);
-            if (alert == null) {
+            AlertType alertType = AlertType.get_alert(activeBgAlert.alert_uuid);
+            if (alertType == null) {
+                stopAlert(ctx, false, false);
                 Log.d(TAG, "ClockTick: The alert was already deleted... will not play");
                 ActiveBgAlert.ClearData();
                 return;
             }
-            Log.d(TAG,"ClockTick: Playing the alert again");
-            Vibrate(ctx, alert, bgValue, alert.override_silent_mode, timeFromStartPlaying);
+            Log.d(TAG, "ClockTick: Playing the alert again");
+            int time = alertType.minutes_between;
+            if (time < 1 || AlertPlayer.isAscendingMode(ctx)) {
+                time = 1;
+            }
+            if(System.currentTimeMillis() >=  activeBgAlert.last_alerted_at + time*60000 - 30000){
+                // just alert, if the reraise time has passed (or half a minute earlier to not miss one by a few milliseconds)
+                activeBgAlert.last_alerted_at = System.currentTimeMillis();
+                activeBgAlert.save();
+                stopAlert(ctx, false, false);
+                Vibrate(ctx, alertType, bgValue, alertType.override_silent_mode, timeFromStartPlaying);
+            } else {
+                Log.d(TAG, "Still in reraise period." );
+            }
         }
 
     }
 
-    private void PlayFile(Context ctx, String FileName, float VolumeFrac) {
+    private void PlayFile(final Context ctx, String FileName, float VolumeFrac) {
         Log.i(TAG, "PlayFile: called FileName = " + FileName);
         if(mediaPlayer != null) {
             Log.i(TAG, "ERROR, PlayFile:going to leak a mediaplayer !!!");
@@ -151,13 +163,12 @@ private void PlayFile(Context ctx, String FileName, float VolumeFrac) {
             volumeBeforeAlert = manager.getStreamVolume(AudioManager.STREAM_MUSIC);
             volumeForThisAlert = (int)(maxVolume * VolumeFrac);
             manager.setStreamVolume(AudioManager.STREAM_MUSIC, volumeForThisAlert, 0);
-            context = ctx;
 
             mediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                 @Override
                 public void onCompletion(MediaPlayer mp) {
                     Log.i(TAG, "PlayFile: onCompletion called (finished playing) ");
-                    AudioManager manager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
+                    AudioManager manager = (AudioManager) ctx.getSystemService(Context.AUDIO_SERVICE);
                     int currentVolume = manager.getStreamVolume(AudioManager.STREAM_MUSIC);
                     if(volumeForThisAlert == currentVolume) {
                         // If the user has changed the volume, don't change it again.
@@ -182,9 +193,14 @@ private PendingIntent snoozeIntent(Context ctx){
         return PendingIntent.getService(ctx, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
     }
 
+    public static boolean isAscendingMode(Context ctx){
+        Log.d("Adrian", "(getAlertProfile(ctx) == ALERT_PROFILE_ASCENDING): " + (getAlertProfile(ctx) == ALERT_PROFILE_ASCENDING));
+        return getAlertProfile(ctx) == ALERT_PROFILE_ASCENDING;
+    }
+
     static private int getAlertProfile(Context ctx){
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ctx);
-        String profile = prefs.getString("bg_alert_profile", "ascending");
+        String profile = prefs.getString("bg_alert_profile", "High");
         if(profile.equals("High")) {
             Log.i(TAG, "getAlertProfile returning ALERT_PROFILE_HIGH");
             return ALERT_PROFILE_HIGH;
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java
index 47eb60e..c0c441d 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java
@@ -292,15 +292,15 @@ private void ArmTimer() {
             AlertType alert = AlertType.get_alert(activeBgAlert.alert_uuid);
             if (alert != null) {
                 int time = alert.minutes_between;
-                if (time < 1) {
+                if (time < 1 || AlertPlayer.isAscendingMode(mContext)) {
                     time = 1;
                 }
                 Calendar calendar = Calendar.getInstance();
                 AlarmManager alarm = (AlarmManager) getSystemService(ALARM_SERVICE);
                 // sleep longer if the alert is snoozed.
                 long wakeTime = activeBgAlert.is_snoozed ? activeBgAlert.next_alert_at :
-                        calendar.getTimeInMillis() + (time * 60000);
-                Log.d(TAG , "ArmTimer waking at: "+ wakeTime);
+                        activeBgAlert.last_alerted_at + (time * 60000);
+                Log.d(TAG , "ArmTimer waking at: "+ new Date(wakeTime) +" in minutes: " +  (wakeTime - calendar.getTimeInMillis())/60000d);
                 if (wakeIntent != null)
                     alarm.cancel(wakeIntent);
                 wakeIntent = PendingIntent.getService(this, 0, new Intent(this, this.getClass()), 0);
diff --git a/app/src/main/res/layout/activity_snooze.xml b/app/src/main/res/layout/activity_snooze.xml
index 9db0056..de7910e 100644
--- a/app/src/main/res/layout/activity_snooze.xml
+++ b/app/src/main/res/layout/activity_snooze.xml
@@ -7,90 +7,100 @@
         android:orientation="vertical"
         android:gravity="center_horizontal"
         android:showDividers="middle">
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="0dp"
-            android:layout_weight=".2"
-            android:orientation="vertical"
-            android:gravity="center_horizontal">
-            <Button
-                android:id="@+id/button_snooze"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:text="@string/snooze"
-                android:layout_margin="20dp"
-                android:textSize="30sp" />
-        </LinearLayout>
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="0dp"
-            android:layout_weight=".25"
-            android:orientation="vertical"
-            android:gravity="center_horizontal">
 
-            <NumberPicker
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:id="@+id/snooze"
-                android:layout_gravity="center_horizontal"
-                android:descendantFocusability="blocksDescendants"/>
-        </LinearLayout>
-        <LinearLayout
+        <ScrollView
             android:layout_width="fill_parent"
-            android:layout_height="0dp"
-            android:layout_weight=".25"
-            android:orientation="vertical"
-            android:gravity="center_horizontal"
-            android:paddingTop="10dp">
-
-            <TextView
-                android:id="@+id/alert_status"
+            android:layout_height="fill_parent"
+            android:id="@+id/scrollView4" >
+            <LinearLayout
                 android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
+                android:layout_height="fill_parent"
+                android:orientation="vertical"
                 android:gravity="center_horizontal"
-                android:text="replace dynamically (alert status)"
-                android:textSize="20sp"/>
-            </LinearLayout>
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="0dp"
-            android:layout_weight=".3"
-            android:orientation="vertical"
-            android:gravity="center_horizontal">
-            <Button
-                android:id="@+id/button_disable_low_alerts"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="Disable Low alerts"/>
-            <Button
-                android:id="@+id/enable_low_alerts"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="Re-Enable Low Alerts"/>
-            <Button
-                android:id="@+id/button_disable_high_alerts"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="Disable High alerts"/>
-            <Button
-                android:id="@+id/enable_high_alerts"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="Re-Enable High Alerts"/>
-            <Button
-                android:id="@+id/button_disable_alerts"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="Disable All alerts"/>
-            <Button
-                android:id="@+id/enable_alerts"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="Re-Enable All Alerts"/>
-        </LinearLayout>
-
+                android:showDividers="middle">
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="0dp"
+                    android:layout_weight=".2"
+                    android:orientation="vertical"
+                    android:gravity="center_horizontal">
+                    <Button
+                        android:id="@+id/button_snooze"
+                        android:layout_width="fill_parent"
+                        android:layout_height="fill_parent"
+                        android:text="@string/snooze"
+                        android:layout_margin="20dp"
+                        android:textSize="30sp" />
+                </LinearLayout>
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="0dp"
+                    android:layout_weight=".25"
+                    android:orientation="vertical"
+                    android:gravity="center_horizontal">
 
+                    <NumberPicker
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:id="@+id/snooze"
+                        android:layout_gravity="center_horizontal"
+                        android:descendantFocusability="blocksDescendants"/>
+                </LinearLayout>
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="0dp"
+                    android:layout_weight=".25"
+                    android:orientation="vertical"
+                    android:gravity="center_horizontal"
+                    android:paddingTop="10dp">
 
+                    <TextView
+                        android:id="@+id/alert_status"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:gravity="center_horizontal"
+                        android:text="replace dynamically (alert status)"
+                        android:textSize="20sp"/>
+                    </LinearLayout>
+                <LinearLayout
+                    android:layout_width="fill_parent"
+                    android:layout_height="0dp"
+                    android:layout_weight=".3"
+                    android:orientation="vertical"
+                    android:gravity="center_horizontal">
+                    <Button
+                        android:id="@+id/button_disable_low_alerts"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Disable Low alerts"/>
+                    <Button
+                        android:id="@+id/enable_low_alerts"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Re-Enable Low Alerts"/>
+                    <Button
+                        android:id="@+id/button_disable_high_alerts"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Disable High alerts"/>
+                    <Button
+                        android:id="@+id/enable_high_alerts"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Re-Enable High Alerts"/>
+                    <Button
+                        android:id="@+id/button_disable_alerts"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Disable All alerts"/>
+                    <Button
+                        android:id="@+id/enable_alerts"
+                        android:layout_width="fill_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Re-Enable All Alerts"/>
+                </LinearLayout>
+            </LinearLayout>
+        </ScrollView>
     </LinearLayout>
     <fragment android:id="@+id/navigation_drawer"
     android:layout_width="@dimen/navigation_drawer_width" android:layout_height="match_parent"
diff --git a/app/src/main/res/values/arrays.xml b/app/src/main/res/values/arrays.xml
index b450c67..67e3f5a 100644
--- a/app/src/main/res/values/arrays.xml
+++ b/app/src/main/res/values/arrays.xml
@@ -30,9 +30,9 @@
 <!--     make sure to keep this values in sync with AlertPlayer.getAlertProfile -->
     <string-array name="BgAlertProfileEntries">
         <item>High</item>
-        <item>ascending</item>
-        <item>medium</item>
-        <item>vibrate only</item>
+        <item>Ascending (disables reraise)</item>
+        <item>Medium</item>
+        <item>Vibrate only</item>
         <item>Silent</item>
     </string-array>
 
diff --git a/app/src/main/res/xml/pref_notifications.xml b/app/src/main/res/xml/pref_notifications.xml
index 3cc73d8..c47d326 100644
--- a/app/src/main/res/xml/pref_notifications.xml
+++ b/app/src/main/res/xml/pref_notifications.xml
@@ -19,19 +19,19 @@
                     android:title="BG alerts profile"
                     android:entries="@array/BgAlertProfileEntries"
                     android:entryValues="@array/BgAlertProfileValues"
-                    android:defaultValue="ascending"/>
+                    android:defaultValue="High"/>
             
             <CheckBoxPreference
                 android:key="smart_snoozing"
                 android:title="Smart snoozing"
                 android:summary="Keep snoozing if bg is heading in the right direction"
-                android:defaultValue="true" />
+                android:defaultValue="false" />
 
             <CheckBoxPreference
                 android:key="smart_alerting"
                 android:title="Smart alerting"
                 android:summary="Don't alert if bg is heading in the right direction"
-                android:defaultValue="true" />
+                android:defaultValue="false" />
 
             <CheckBoxPreference
                 android:key="bg_alerts_from_main_menu"

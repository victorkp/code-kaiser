diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 30448bf..5a3bbcb 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -4,6 +4,9 @@
 
     <permission android:name="com.eveningoutpost.dexdrip.permissions.RECEIVE_BG_ESTIMATE" />
 
+    <!-- To receive data from HAPP. -->
+    <uses-permission android:name="com.eveningoutpost.dexdrip.permissions.RECEIVE_EXTERNAL_STATUSLINE" />
+
     <uses-feature
         android:name="android.hardware.bluetooth_le"
         android:required="true" />
@@ -108,6 +111,9 @@
             </intent-filter>
         </receiver>
 
+        <receiver android:name=".wearintegration.ExternalStatusBroadcastReceier" android:exported="true" >
+            <intent-filter> <action android:name="com.eveningoutpost.dexdrip.ExternalStatusline" /> </intent-filter>
+        </receiver>
         <activity
             android:name=".Tables.CalibrationDataTable"
             android:label="@string/title_activity_calibration_data_table" >
@@ -124,6 +130,12 @@
             android:exported="true" >
         </service>
 
+        <service
+            android:name=".wearintegration.ExternalStatusService"
+            android:enabled="true"
+            android:exported="false" >
+        </service>
+
         <activity
             android:name=".stats.StatsActivity"
             android:label="Statistics" >
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusBroadcastReceier.java b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusBroadcastReceier.java
new file mode 100644
index 0000000..5387afa
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusBroadcastReceier.java
@@ -0,0 +1,19 @@
+package com.eveningoutpost.dexdrip.wearintegration;
+
+import android.content.Context;
+import android.content.Intent;
+import android.support.v4.content.WakefulBroadcastReceiver;
+
+import com.eveningoutpost.dexdrip.Models.UserError;
+
+/**
+ * Created by adrian on 14/02/16.
+ */
+public class ExternalStatusBroadcastReceier extends WakefulBroadcastReceiver {
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        startWakefulService(context, new Intent(context, ExternalStatusService.class)
+                .setAction(ExternalStatusService.ACTION_NEW_EXTERNAL_STATUSLINE)
+                .putExtras(intent));
+    }
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusService.java b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusService.java
new file mode 100644
index 0000000..863c749
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusService.java
@@ -0,0 +1,70 @@
+package com.eveningoutpost.dexdrip.wearintegration;
+
+import android.app.IntentService;
+import android.content.Context;
+import android.content.Intent;
+import android.os.PowerManager;
+import android.preference.PreferenceManager;
+import android.support.v4.content.WakefulBroadcastReceiver;
+import android.util.Log;
+
+import com.eveningoutpost.dexdrip.Home;
+import com.eveningoutpost.dexdrip.Models.UserError;
+import com.eveningoutpost.dexdrip.utils.Preferences;
+import com.google.android.gms.common.api.GoogleApiClient;
+import com.google.android.gms.wearable.Wearable;
+
+import java.util.Date;
+
+/**
+ * Created by adrian on 14/02/16.
+ */
+public class ExternalStatusService extends IntentService{
+    //constants
+    public static final String EXTRA_STATUSLINE = "com.eveningoutpost.dexdrip.Extras.Statusline";
+    public static final String ACTION_NEW_EXTERNAL_STATUSLINE = "com.eveningoutpost.dexdrip.ExternalStatusline";
+    public static final String RECEIVER_PERMISSION = "com.eveningoutpost.dexdrip.permissions.RECEIVE_EXTERNAL_STATUSLINE";
+    public static final int MAX_LEN = 40;
+
+    public ExternalStatusService() {
+        super("ExternalStatusService");
+        setIntentRedelivery(true);
+    }
+
+
+    @Override
+    protected void onHandleIntent(Intent intent) {
+
+        if (intent == null)
+            return;
+
+        final String action = intent.getAction();
+
+        try {
+
+            if (ACTION_NEW_EXTERNAL_STATUSLINE.equals(action)) {
+                String statusline = intent.getStringExtra(EXTRA_STATUSLINE);
+
+                if(statusline.length() > MAX_LEN){
+                    statusline = statusline.substring(0, MAX_LEN);
+                }
+
+                if(statusline != null) {
+                    // send to wear
+                    if (PreferenceManager.getDefaultSharedPreferences(this).getBoolean("wear_sync", false)) {
+                        startService(new Intent(this, WatchUpdaterService.class).setAction(WatchUpdaterService.ACTION_SEND_STATUS).putExtra("externalStatusString", statusline));
+                        /*By integrating the watch part of Nightwatch we inherited the same wakelock
+                         problems NW had - so adding the same quick fix for now.
+                         TODO: properly "wakelock" the wear (and probably pebble) services
+                        */
+                        PowerManager powerManager = (PowerManager) this.getSystemService(Context.POWER_SERVICE);
+                        powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
+                                "quickFix4").acquire(15000);
+                    }
+                }
+            }
+        } finally {
+            WakefulBroadcastReceiver.completeWakefulIntent(intent);
+        }
+    }
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/WatchUpdaterService.java b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/WatchUpdaterService.java
index 8b3cc42..ba97f88 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/WatchUpdaterService.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/WatchUpdaterService.java
@@ -28,11 +28,14 @@
         GoogleApiClient.OnConnectionFailedListener {
     public static final String ACTION_RESEND = WatchUpdaterService.class.getName().concat(".Resend");
     public static final String ACTION_OPEN_SETTINGS = WatchUpdaterService.class.getName().concat(".OpenSettings");
+    public static final String ACTION_SEND_STATUS = WatchUpdaterService.class.getName().concat(".SendStatus");
 
     private GoogleApiClient googleApiClient;
     public static final String WEARABLE_DATA_PATH = "/nightscout_watch_data";
     public static final String WEARABLE_RESEND_PATH = "/nightscout_watch_data_resend";
     private static final String OPEN_SETTINGS_PATH = "/openwearsettings";
+    private static final String NEW_STATUS_PATH = "/sendstatustowear";
+
 
     boolean wear_integration = false;
     boolean pebble_integration = false;
@@ -98,6 +101,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     resendData();
                 } else if (ACTION_OPEN_SETTINGS.equals(action)) {
                     sendNotification();
+                } else if (ACTION_SEND_STATUS.equals(action)) {
+                    sendStatus(intent.getStringExtra("externalStatusString"));
                 } else {
                     sendData();
                 }
@@ -168,6 +173,19 @@ private void sendNotification() {
         }
     }
 
+    private void sendStatus(String status) {
+        if (googleApiClient.isConnected()) {
+            PutDataMapRequest dataMapRequest = PutDataMapRequest.create(NEW_STATUS_PATH);
+            //unique content
+            dataMapRequest.getDataMap().putDouble("timestamp", System.currentTimeMillis());
+            dataMapRequest.getDataMap().putString("externalStatusString", status);
+            PutDataRequest putDataRequest = dataMapRequest.asPutDataRequest();
+            Wearable.DataApi.putDataItem(googleApiClient, putDataRequest);
+        } else {
+            Log.e("SendStatus", "No connection to wearable available!");
+        }
+    }
+
     private DataMap dataMap(BgReading bg, SharedPreferences sPrefs, BgGraphBuilder bgGraphBuilder) {
         Double highMark = Double.parseDouble(sPrefs.getString("highValue", "170"));
         Double lowMark = Double.parseDouble(sPrefs.getString("lowValue", "70"));
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java b/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java
index 1397bca..d44f109 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java
@@ -14,6 +14,7 @@
 import android.graphics.Point;
 import android.graphics.Rect;
 import android.graphics.Shader;
+import android.os.Bundle;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
 import android.support.v4.app.NotificationCompat;
@@ -204,7 +205,11 @@ protected void onTimeChanged(WatchFaceTime oldTime, WatchFaceTime newTime) {
     public class MessageReceiver extends BroadcastReceiver {
         @Override
         public void onReceive(Context context, Intent intent) {
-            DataMap dataMap = DataMap.fromBundle(intent.getBundleExtra("data"));
+            Bundle bundle = intent.getBundleExtra("data");
+            if (bundle ==null){
+                return;
+            }
+            DataMap dataMap = DataMap.fromBundle(bundle);
             if (layoutSet) {
                 wakeLock.acquire(50);
                 sgvLevel = dataMap.getLong("sgvLevel");
@@ -438,11 +443,11 @@ protected void setColorBright() {
     public void missedReadingAlert() {
         int minutes_since   = (int) Math.floor(timeSince()/(1000*60));
         if(minutes_since >= 16 && ((minutes_since - 16) % 5) == 0) {
-            NotificationCompat.Builder notification = new NotificationCompat.Builder(getApplicationContext())
+            /*NotificationCompat.Builder notification = new NotificationCompat.Builder(getApplicationContext())
                     .setContentTitle("Missed BG Readings")
                     .setVibrate(vibratePattern);
-            NotificationManager mNotifyMgr = (NotificationManager) getApplicationContext().getSystemService(getApplicationContext().NOTIFICATION_SERVICE);
-            mNotifyMgr.notify(missed_readings_alert_id, notification.build());
+            NotificationManager mNotifyMgr = (hNotificationManager) getApplicationContext().getSystemService(getApplicationContext().NOTIFICATION_SERVICE);
+            mNotifyMgr.notify(missed_readings_alert_id, notification.build());*/
             ListenerService.requestData(this); // attempt to recover missing data
         }
     }
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java b/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java
index 408668b..1e20929 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java
@@ -11,6 +11,7 @@
 import android.graphics.Paint;
 import android.graphics.Point;
 import android.graphics.Rect;
+import android.os.Bundle;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
 import android.support.v4.app.NotificationCompat;
@@ -42,7 +43,7 @@
 public  abstract class BaseWatchFace extends WatchFace implements SharedPreferences.OnSharedPreferenceChangeListener {
     public final static IntentFilter INTENT_FILTER;
     public static final long[] vibratePattern = {0,400,300,400,300,400};
-    public TextView mTime, mSgv, mDirection, mTimestamp, mUploaderBattery, mDelta, mRaw;
+    public TextView mTime, mSgv, mDirection, mTimestamp, mUploaderBattery, mDelta, mRaw, mStatus;
     public RelativeLayout mRelativeLayout;
     public LinearLayout mLinearLayout;
     public long sgvLevel = 0;
@@ -69,9 +70,11 @@
     private MessageReceiver messageReceiver;
 
     protected SharedPreferences sharedPrefs;
-    private String rawString = "000 | 000 | 000";
+    // private String rawString = "000 | 000 | 000";
+    private String rawString = "";
     private String batteryString = "--";
     private String sgvString = "--";
+    private String externalStatusString = "no status";
 
     @Override
     public void onCreate() {
@@ -112,13 +115,14 @@ public void onLayoutInflated(WatchViewStub stub) {
                 mDirection = (TextView) stub.findViewById(R.id.direction);
                 mTimestamp = (TextView) stub.findViewById(R.id.timestamp);
                 mRaw = (TextView) stub.findViewById(R.id.raw);
+                mStatus = (TextView) stub.findViewById(R.id.externaltstatus);
                 mUploaderBattery = (TextView) stub.findViewById(R.id.uploader_battery);
                 mDelta = (TextView) stub.findViewById(R.id.delta);
                 mRelativeLayout = (RelativeLayout) stub.findViewById(R.id.main_layout);
                 mLinearLayout = (LinearLayout) stub.findViewById(R.id.secondary_layout);
                 chart = (LineChartView) stub.findViewById(R.id.chart);
                 layoutSet = true;
-                showAgoRawBatt();
+                showAgoRawBattStatus();
                 mRelativeLayout.measure(specW, specH);
                 mRelativeLayout.layout(0, 0, mRelativeLayout.getMeasuredWidth(),
                         mRelativeLayout.getMeasuredHeight());
@@ -180,7 +184,7 @@ protected void onTimeChanged(WatchFaceTime oldTime, WatchFaceTime newTime) {
             wakeLock.acquire(50);
             final java.text.DateFormat timeFormat = DateFormat.getTimeFormat(BaseWatchFace.this);
             mTime.setText(timeFormat.format(System.currentTimeMillis()));
-            showAgoRawBatt();
+            showAgoRawBattStatus();
 
             if(ageLevel()<=0) {
                 mSgv.setPaintFlags(mSgv.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
@@ -198,8 +202,11 @@ protected void onTimeChanged(WatchFaceTime oldTime, WatchFaceTime newTime) {
     public class MessageReceiver extends BroadcastReceiver {
         @Override
         public void onReceive(Context context, Intent intent) {
-            DataMap dataMap = DataMap.fromBundle(intent.getBundleExtra("data"));
-            if (layoutSet) {
+
+            //data
+            Bundle bundle = intent.getBundleExtra("data");
+            if (layoutSet && bundle != null) {
+                DataMap dataMap = DataMap.fromBundle(bundle);
                 wakeLock.acquire(50);
                 sgvLevel = dataMap.getLong("sgvLevel");
                 batteryLevel = dataMap.getInt("batteryLevel");
@@ -218,7 +225,7 @@ public void onReceive(Context context, Intent intent) {
                 final java.text.DateFormat timeFormat = DateFormat.getTimeFormat(BaseWatchFace.this);
                 mTime.setText(timeFormat.format(System.currentTimeMillis()));
 
-                showAgoRawBatt();
+                showAgoRawBattStatus();
 
                 mDirection.setText(dataMap.getString("slopeArrow"));
                 mDelta.setText(dataMap.getString("delta"));
@@ -231,31 +238,61 @@ public void onReceive(Context context, Intent intent) {
                 mRelativeLayout.layout(0, 0, mRelativeLayout.getMeasuredWidth(),
                         mRelativeLayout.getMeasuredHeight());
                 invalidate();
-            } else {
-                Log.d("ERROR: ", "DATA IS NOT YET SET");
+                setColor();
             }
-            setColor();
+            //status
+            bundle = intent.getBundleExtra("status");
+            if (layoutSet && bundle != null) {
+                DataMap dataMap = DataMap.fromBundle(bundle);
+                wakeLock.acquire(50);
+                externalStatusString = dataMap.getString("externalStatusString");
+
+                showAgoRawBattStatus();
+
+                mRelativeLayout.measure(specW, specH);
+                mRelativeLayout.layout(0, 0, mRelativeLayout.getMeasuredWidth(),
+                        mRelativeLayout.getMeasuredHeight());
+                invalidate();
+                setColor();
+            }
+
         }
     }
 
-    private void showAgoRawBatt() {
+    private void showAgoRawBattStatus() {
 
-        if(mRaw == null || mTimestamp == null || mUploaderBattery == null){
+        if(mRaw == null || mTimestamp == null || mUploaderBattery == null|| mStatus == null){
             return;
         }
 
-        if (sharedPrefs.getBoolean("showRaw", false)||
-                (sharedPrefs.getBoolean("showRawNoise", true) && sgvString.equals("???"))
-                ) {
-            mRaw.setVisibility(View.VISIBLE);
-            mRaw.setText("R: " + rawString);
+        boolean showRaw = sharedPrefs.getBoolean("showRaw", false)
+                || (sharedPrefs.getBoolean("showRawNoise", true)
+                        && sgvString.equals("???"));
+
+        boolean showStatus = sharedPrefs.getBoolean("showExternalStatus", false);
+
+        if(showRaw || showStatus){
+            //use short forms
             mTimestamp.setText(readingAge(true));
             mUploaderBattery.setText("U: " + batteryString + "%");
         } else {
-            mRaw.setVisibility(View.GONE);
             mTimestamp.setText(readingAge(false));
             mUploaderBattery.setText("Uploader: " + batteryString + "%");
         }
+
+        if (showRaw) {
+            mRaw.setVisibility(View.VISIBLE);
+            mRaw.setText("R: " + rawString);
+        } else {
+            mRaw.setVisibility(View.GONE);
+        }
+
+        if (showStatus) {
+            mStatus.setVisibility(View.VISIBLE);
+            mStatus.setText("S: " + externalStatusString);
+        } else {
+            mStatus.setVisibility(View.GONE);
+        }
     }
 
     public void setColor() {
@@ -273,7 +310,7 @@ public void setColor() {
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key){
         setColor();
         if(layoutSet){
-            showAgoRawBatt();
+            showAgoRawBattStatus();
             mRelativeLayout.measure(specW, specH);
             mRelativeLayout.layout(0, 0, mRelativeLayout.getMeasuredWidth(),
                     mRelativeLayout.getMeasuredHeight());
@@ -287,11 +324,11 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin
     public void missedReadingAlert() {
         int minutes_since   = (int) Math.floor(timeSince()/(1000*60));
         if(minutes_since >= 16 && ((minutes_since - 16) % 5) == 0) {
-            NotificationCompat.Builder notification = new NotificationCompat.Builder(getApplicationContext())
+            /*NotificationCompat.Builder notification = new NotificationCompat.Builder(getApplicationContext())
                         .setContentTitle("Missed BG Readings")
                         .setVibrate(vibratePattern);
             NotificationManager mNotifyMgr = (NotificationManager) getApplicationContext().getSystemService(getApplicationContext().NOTIFICATION_SERVICE);
-            mNotifyMgr.notify(missed_readings_alert_id, notification.build());
+            mNotifyMgr.notify(missed_readings_alert_id, notification.build());*/
             ListenerService.requestData(this); // attempt to recover missing data
         }
     }
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/CircleWatchface.java b/wear/src/main/java/com/eveningoutpost/dexdrip/CircleWatchface.java
index 0b29c9d..4856c5d 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/CircleWatchface.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/CircleWatchface.java
@@ -13,6 +13,7 @@
 import android.graphics.Point;
 import android.graphics.RectF;
 import android.graphics.Shader;
+import android.os.Bundle;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
 import android.support.v4.content.LocalBroadcastManager;
@@ -519,27 +520,29 @@ public void onReceive(Context context, Intent intent) {
             PowerManager.WakeLock wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
                     "MyWakelockTag");
             wakeLock.acquire(30000);
+            Bundle bundle = intent.getBundleExtra("data");
+            if (bundle!= null) {
+                DataMap dataMap = DataMap.fromBundle(bundle);
+                setSgvLevel((int) dataMap.getLong("sgvLevel"));
+                Log.d("CircleWatchface", "sgv level : " + getSgvLevel());
+                setSgvString(dataMap.getString("sgvString"));
+                Log.d("CircleWatchface", "sgv string : " + getSgvString());
+                setRawString(dataMap.getString("rawString"));
+                setDelta(dataMap.getString("delta"));
+                setDatetime(dataMap.getDouble("timestamp"));
+                addToWatchSet(dataMap);
+
+
+                //start animation?
+                // dataMap.getDataMapArrayList("entries") == null -> not on "resend data".
+                if (sharedPrefs.getBoolean("animation", false) && dataMap.getDataMapArrayList("entries") == null && (getSgvString().equals("100") || getSgvString().equals("5.5") || getSgvString().equals("5,5"))) {
+                    startAnimation();
+                }
 
-            DataMap dataMap = DataMap.fromBundle(intent.getBundleExtra("data"));
-            setSgvLevel((int) dataMap.getLong("sgvLevel"));
-            Log.d("CircleWatchface", "sgv level : " + getSgvLevel());
-            setSgvString(dataMap.getString("sgvString"));
-            Log.d("CircleWatchface", "sgv string : " + getSgvString());
-            setRawString(dataMap.getString("rawString"));
-            setDelta(dataMap.getString("delta"));
-            setDatetime(dataMap.getDouble("timestamp"));
-            addToWatchSet(dataMap);
-
-
-            //start animation?
-            // dataMap.getDataMapArrayList("entries") == null -> not on "resend data".
-            if (sharedPrefs.getBoolean("animation", false) && dataMap.getDataMapArrayList("entries") == null && (getSgvString().equals("100") || getSgvString().equals("5.5") || getSgvString().equals("5,5"))) {
-                startAnimation();
+                prepareLayout();
+                prepareDrawTime();
+                invalidate();
             }
-
-            prepareLayout();
-            prepareDrawTime();
-            invalidate();
             wakeLock.release();
         }
     }
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java b/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java
index c2dc1c4..c3ad7a4 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java
@@ -46,6 +46,7 @@ protected void setColorDark() {
             mUploaderBattery.setTextColor(Color.RED);
         }
         mRaw.setTextColor(Color.BLACK);
+        mStatus.setTextColor(Color.BLACK);
         if (chart != null) {
             highColor = Color.YELLOW;
            lowColor = Color.RED;
@@ -89,6 +90,8 @@ protected void setColorBright() {
                 mUploaderBattery.setTextColor(Color.RED);
             }
             mRaw.setTextColor(Color.WHITE);
+            mStatus.setTextColor(Color.WHITE);
+
             mTime.setTextColor(Color.BLACK);
             if (chart != null) {
                 highColor = Utils.COLOR_ORANGE;
@@ -115,6 +118,7 @@ protected void setColorBright() {
                 mDelta.setTextColor(Color.RED);
             }
             mRaw.setTextColor(Color.BLACK);
+            mStatus.setTextColor(Color.BLACK);
             mUploaderBattery.setTextColor(Color.BLACK);
             mTimestamp.setTextColor(Color.BLACK);
 
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java b/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java
index dd0a3b3..8aea5d8 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java
@@ -47,6 +47,8 @@ protected void setColorDark(){
         }
 
         mRaw.setTextColor(Color.BLACK);
+        mStatus.setTextColor(Color.BLACK);
+
     }
 
 
@@ -82,6 +84,7 @@ protected void setColorBright() {
                 mUploaderBattery.setTextColor(Color.RED);
             }
             mRaw.setTextColor(Color.WHITE);
+            mStatus.setTextColor(Color.WHITE);
             mTime.setTextColor(Color.BLACK);
         } else {
             mRelativeLayout.setBackgroundColor(Color.BLACK);
@@ -103,6 +106,7 @@ protected void setColorBright() {
             mUploaderBattery.setTextColor(Color.BLACK);
             mTimestamp.setTextColor(Color.BLACK);
             mRaw.setTextColor(Color.BLACK);
+            mStatus.setTextColor(Color.BLACK);
             mTime.setTextColor(Color.WHITE);
         }
     }
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/ListenerService.java b/wear/src/main/java/com/eveningoutpost/dexdrip/ListenerService.java
index 75f5ed3..19eafec 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/ListenerService.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/ListenerService.java
@@ -25,6 +25,8 @@
     private static final String WEARABLE_DATA_PATH = "/nightscout_watch_data";
     private static final String WEARABLE_RESEND_PATH = "/nightscout_watch_data_resend";
     private static final String OPEN_SETTINGS = "/openwearsettings";
+    private static final String NEW_STATUS_PATH = "/sendstatustowear";
+
     private static final String ACTION_RESEND = "com.dexdrip.stephenblack.nightwatch.RESEND_DATA";
     private static final String ACTION_RESEND_BULK = "com.dexdrip.stephenblack.nightwatch.RESEND_BULK_DATA";
     GoogleApiClient googleApiClient;
@@ -95,10 +97,15 @@ public void onDataChanged(DataEventBuffer dataEvents) {
                     intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                     startActivity(intent);
 
-                } else {
-
+                } else if (path.equals(NEW_STATUS_PATH)){
                     dataMap = DataMapItem.fromDataItem(event.getDataItem()).getDataMap();
+                    Intent messageIntent = new Intent();
+                    messageIntent.setAction(Intent.ACTION_SEND);
+                    messageIntent.putExtra("status", dataMap.toBundle());
+                    LocalBroadcastManager.getInstance(this).sendBroadcast(messageIntent);
 
+                } else {
+                    dataMap = DataMapItem.fromDataItem(event.getDataItem()).getDataMap();
                     Intent messageIntent = new Intent();
                     messageIntent.setAction(Intent.ACTION_SEND);
                     messageIntent.putExtra("data", dataMap.toBundle());
diff --git a/wear/src/main/res/layout/rect_activity_home.xml b/wear/src/main/res/layout/rect_activity_home.xml
index 445802c..344321f 100644
--- a/wear/src/main/res/layout/rect_activity_home.xml
+++ b/wear/src/main/res/layout/rect_activity_home.xml
@@ -113,7 +113,16 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="10sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="10sp"
+                    android:text="S: no status"
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
diff --git a/wear/src/main/res/layout/rect_activity_home_large.xml b/wear/src/main/res/layout/rect_activity_home_large.xml
index 26cc0f5..20cc6ee 100644
--- a/wear/src/main/res/layout/rect_activity_home_large.xml
+++ b/wear/src/main/res/layout/rect_activity_home_large.xml
@@ -101,12 +101,22 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="12sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
                     android:paddingLeft="10sp"
                     android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="12sp"
+                    android:text="S: no status"
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+
 
             </LinearLayout>
 
diff --git a/wear/src/main/res/layout/round_activity_home.xml b/wear/src/main/res/layout/round_activity_home.xml
index ab7c98f..231a091 100644
--- a/wear/src/main/res/layout/round_activity_home.xml
+++ b/wear/src/main/res/layout/round_activity_home.xml
@@ -109,7 +109,16 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="8sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="8sp"
+                    android:text="S: no status"
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
diff --git a/wear/src/main/res/layout/round_activity_home_large.xml b/wear/src/main/res/layout/round_activity_home_large.xml
index 085b616..6217af3 100644
--- a/wear/src/main/res/layout/round_activity_home_large.xml
+++ b/wear/src/main/res/layout/round_activity_home_large.xml
@@ -101,7 +101,16 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="12sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="12sp"
+                    android:text="S: no status"
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
diff --git a/wear/src/main/res/xml/preferences.xml b/wear/src/main/res/xml/preferences.xml
index a23b639..6e5bdeb 100644
--- a/wear/src/main/res/xml/preferences.xml
+++ b/wear/src/main/res/xml/preferences.xml
@@ -22,6 +22,11 @@
             android:key="showRawNoise" />
          -->
 
+        <CheckBoxPreference android:title="Show External Status"
+            android:defaultValue="false"
+            android:summary="Show External Staus (HAPP e.g.)."
+            android:key="showExternalStatus" />
+
         <ListPreference
             android:key="chart_timeframe"
             android:title="Chart Timeframe"

diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
index 3b97a3f..3eeda91 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
@@ -421,6 +421,37 @@ protected void onPostExecute(String filename) {
 
             return true;
         }
+
+
+        if (item.getItemId() == R.id.action_export_csv) {
+            new AsyncTask<Void, Void, String>() {
+                @Override
+                protected String doInBackground(Void... params) {
+                    return DatabaseUtil.saveCSV(getBaseContext());
+                }
+
+                @Override
+                protected void onPostExecute(String filename) {
+                    super.onPostExecute(filename);
+                    if (filename != null) {
+                        SnackbarManager.show(
+                                Snackbar.with(Home.this)
+                                        .type(SnackbarType.MULTI_LINE)
+                                        .duration(4000)
+                                        .text("Exported to " + filename) // text to display
+                                        .actionLabel("Share") // action button label
+                                        .actionListener(new SnackbarUriListener(Uri.fromFile(new File(filename)))),
+                                Home.this);
+                    } else {
+                        Toast.makeText(Home.this, "Could not export CSV :(", Toast.LENGTH_LONG).show();
+                    }
+                }
+            }.execute();
+
+            return true;
+        }
+
+
         return super.onOptionsItemSelected(item);
     }
 
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/utils/DatabaseUtil.java b/app/src/main/java/com/eveningoutpost/dexdrip/utils/DatabaseUtil.java
index b873116..767ebce 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/utils/DatabaseUtil.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/utils/DatabaseUtil.java
@@ -1,13 +1,17 @@
 package com.eveningoutpost.dexdrip.utils;
 
 import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.net.Uri;
 import android.os.Environment;
 import android.text.format.DateFormat;
 import android.util.Log;
 import android.widget.Toast;
 
+import com.activeandroid.Cache;
 import com.activeandroid.Configuration;
+import com.eveningoutpost.dexdrip.stats.BgReadingStats;
 
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
@@ -15,7 +19,12 @@
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.IOException;
+import java.io.PrintStream;
 import java.nio.channels.FileChannel;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.List;
+import java.util.Vector;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipOutputStream;
 
@@ -166,6 +175,93 @@ public static String saveSqlUnzipped(Context context) {
         return filename;
     }
 
+
+    /**
+     * Generate a csv that can be imported by SiDiary
+     * */
+    public static String saveCSV(Context context) {
+
+        FileOutputStream foStream = null;
+        PrintStream printStream = null;
+        ZipOutputStream zipOutputStream =null;
+        String zipFilename = null;
+
+
+        try {
+
+            final String databaseName = new Configuration.Builder(context).create().getDatabaseName();
+
+            final String dir = getExternalDir();
+            makeSureDirectoryExists(dir);
+
+            final StringBuilder sb = new StringBuilder();
+            sb.append(dir);
+            sb.append("/exportCSV");
+            sb.append(DateFormat.format("yyyyMMdd-kkmmss", System.currentTimeMillis()));
+            sb.append(".zip");
+            zipFilename = sb.toString();
+            final File sd = Environment.getExternalStorageDirectory();
+            if (sd.canWrite()) {
+                final File zipOutputFile = new File(zipFilename);
+
+                foStream = new FileOutputStream(zipOutputFile);
+                zipOutputStream = new ZipOutputStream(new BufferedOutputStream(foStream));
+                zipOutputStream.putNextEntry(new ZipEntry("export" + DateFormat.format("yyyyMMdd-kkmmss", System.currentTimeMillis()) + ".csv"));
+                printStream = new PrintStream(zipOutputStream);
+
+                printStream.println("DAY;TIME;UDT_CGMS");
+
+
+                SQLiteDatabase db = Cache.openDatabase();
+                //Cursor cur = db.query("bgreadings", new String[]{"timestamp", "calculated_value"}, "timestamp >= ? AND timestamp <=  ? AND calculated_value > ?", new String[]{"" + bounds.start, "" + bounds.stop, CUTOFF}, null, null, orderBy);
+
+                Cursor cur = db.query("bgreadings", new String[]{"timestamp", "calculated_value"}, null, null, null, null, null);
+
+                double value;
+                long timestamp;
+                java.text.DateFormat df = new SimpleDateFormat("dd.MM.yyyy;HH:mm;");
+                Date date = new Date();
+
+                if (cur.moveToFirst()) {
+                    do {
+                        timestamp = cur.getLong(0);
+                        value = cur.getDouble(1);
+                        if(value > 13){
+                            date.setTime(timestamp);
+                            printStream.println(df.format(date) + Math.round(value));
+                        }
+
+
+                    } while (cur.moveToNext());
+                }
+
+                printStream.flush();
+
+
+            } else {
+                Toast.makeText(context, "SD card not writable!", Toast.LENGTH_LONG).show();
+                Log.d(TAG, "SD card not writable!");
+            }
+
+        } catch (IOException e) {
+            Toast.makeText(context, "SD card not writable!", Toast.LENGTH_LONG).show();
+            Log.e(TAG, "Exception while writing DB", e);
+        } finally {
+            if (printStream != null) {
+                printStream.close();
+            }
+            if (zipOutputStream != null) try {
+                zipOutputStream.close();
+            } catch (IOException e1) {
+                Log.e(TAG, "Something went wrong closing: ", e1);
+            }
+        }
+        return zipFilename;
+    }
+
+
+
+
     public static void loadSql(Context context, String path) {
 
         FileInputStream srcStream = null;
diff --git a/app/src/main/res/menu/menu_home.xml b/app/src/main/res/menu/menu_home.xml
index 142dc4a..2174f39 100644
--- a/app/src/main/res/menu/menu_home.xml
+++ b/app/src/main/res/menu/menu_home.xml
@@ -5,4 +5,10 @@
         android:checkable="false"
         android:orderInCategory="1"
         android:showAsAction="never"/>
+
+    <item android:id="@+id/action_export_csv"
+        android:title="@string/menu_export_csv_sidiary"
+        android:checkable="false"
+        android:orderInCategory="1"
+        android:showAsAction="never"/>
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index ce70cb2..300cb56 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -13,6 +13,7 @@
     <string name="menu_stop">Stop</string>
     <string name="menu_refresh">Refresh</string>
     <string name="menu_export_database">Export database</string>
+    <string name="menu_export_csv_sidiary">Export CSV (SiDiary format)</string>
     <string name="error_bluetooth_not_supported">Error: Bluetooth not supported by this device</string>
     <string name="unknown_device">Unrecognized Device</string>
     <string name="connecting_to_device">Connecting to device</string>

diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java b/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java
index 73678f8..b231f0c 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Models/ActiveBgAlert.java
@@ -50,7 +50,7 @@ public static boolean alertSnoozeOver() {
         ActiveBgAlert activeBgAlert = getOnly();
         if (activeBgAlert == null) {
             // no alert exists, so snoozing is over... (this should not happen)
-		Log.wtf(TAG, "ActiveBgAlert getOnly returning null (we have just checked it)");
+            Log.wtf(TAG, "ActiveBgAlert getOnly returning null (we have just checked it)");
             return true;
         }
         return activeBgAlert.ready_to_alarm();
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java b/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
index 0e4457e..1f4c6e1 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
@@ -465,7 +465,7 @@ public static void testAlert(
             at.end_time_minutes = end_time_minutes;
             at.override_silent_mode = override_silent_mode;
             at.default_snooze = snooze;
-            new AlertPlayer().getPlayer().startAlert(context, at, "TEST");
+            AlertPlayer.getPlayer().startAlert(context, false, at, "TEST");
     }
 
     // Time is calculated in minutes. that is 01:20 means 80 minutes.
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Services/WixelReader.java b/app/src/main/java/com/eveningoutpost/dexdrip/Services/WixelReader.java
index 4a3bf14..6ac90bf 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Services/WixelReader.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Services/WixelReader.java
@@ -337,7 +337,7 @@ public void run()
 	        		// Make sure we do not report packets from the far future...
 	        		if ((LastReading.CaptureDateTime > LastReportedTime ) &&
 	        		        (!almostEquals(LastReading, LastReportedReading)) &&
-	        		        LastReading.CaptureDateTime < new Date().getTime() + 12000) {
+	        		        LastReading.CaptureDateTime < new Date().getTime() + 120000) {
 	        			// We have a real new reading...
 	        			Log.e(TAG, "calling setSerialDataToTransmitterRawData " + LastReading.RawValue +
 	        			        " LastReading.CaptureDateTime " + LastReading.CaptureDateTime + " " + LastReading.TransmissionId);
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
index 18488d9..4f3adf5 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
@@ -51,8 +51,13 @@ public static AlertPlayer getPlayer() {
         return singletone;
     }
 
-    public synchronized  void startAlert(Context ctx, AlertType newAlert, String bgValue )  {
-        Log.e(TAG, "start called, Threadid " + Thread.currentThread().getId());
+    public synchronized  void startAlert(Context ctx, boolean trendingToAlertEnd, AlertType newAlert, String bgValue )  {
+        Log.e(TAG, "startAlert called, Threadid " + Thread.currentThread().getId());
+        if (trendingToAlertEnd) {
+            Log.e(TAG,"startAlert: This alert is trending to it's end will not do anything");
+            return;
+        }
+
         stopAlert(ctx, true, false);
         int alertIn = newAlert.minutes_between;
         if(alertIn < 1) { alertIn = 1; }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java
index 790f123..8385f5f 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java
@@ -4,6 +4,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 
+import com.eveningoutpost.dexdrip.SnoozeActivity;
 import com.eveningoutpost.dexdrip.Models.AlertType;
 
 /**
@@ -35,12 +36,15 @@ private void migrateBGAlerts() {
                 highMark = highMark * Constants.MMOLL_TO_MGDL;
                 lowMark = lowMark * Constants.MMOLL_TO_MGDL;
             }
-            int bg_snooze = Integer.parseInt(prefs.getString("bg_snooze", "20"));
             boolean bg_sound_in_silent = prefs.getBoolean("bg_sound_in_silent", false);
             String bg_notification_sound = prefs.getString("bg_notification_sound", "content://settings/system/notification_sound");
 
-            AlertType.add_alert(null, "High Alert", true, highMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_snooze);
-            AlertType.add_alert(null, "Low Alert", false, lowMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_snooze);
+            int bg_high_snooze = Integer.parseInt(prefs.getString("bg_snooze",  Integer.toString(SnoozeActivity.getDefaultSnooze(true))));
+            int bg_low_snooze = Integer.parseInt(prefs.getString("bg_snooze",  Integer.toString(SnoozeActivity.getDefaultSnooze(false))));
+
+
+            AlertType.add_alert(null, "High Alert", true, highMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_high_snooze);
+            AlertType.add_alert(null, "Low Alert", false, lowMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_low_snooze);
             prefs.edit().putBoolean("bg_notifications", false).apply();
         }
     }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java
index a7ab1f9..19d6af4 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/Notifications.java
@@ -51,7 +51,6 @@
     public static boolean bg_lights;
     public static boolean bg_sound;
     public static boolean bg_sound_in_silent;
-    public static int bg_snooze;
     public static String bg_notification_sound;
 
     public static boolean calibration_notifications;
@@ -60,6 +59,7 @@
     public static String calibration_notification_sound;
     public static boolean doMgdl;
     public static boolean smart_snoozing;
+    public static boolean smart_alerting;
     private final static String TAG = AlertPlayer.class.getSimpleName();
 
     Context mContext;
@@ -106,7 +106,6 @@ public void ReadPerfs(Context context) {
         bg_vibrate = prefs.getBoolean("bg_vibrate", true);
         bg_lights = prefs.getBoolean("bg_lights", true);
         bg_sound = prefs.getBoolean("bg_play_sound", true);
-        bg_snooze = Integer.parseInt(prefs.getString("bg_snooze", "20"));
         bg_notification_sound = prefs.getString("bg_notification_sound", "content://settings/system/notification_sound");
         bg_sound_in_silent = prefs.getBoolean("bg_sound_in_silent", false);
 
@@ -116,6 +115,7 @@ public void ReadPerfs(Context context) {
         calibration_notification_sound = prefs.getString("calibration_notification_sound", "content://settings/system/notification_sound");
         doMgdl = (prefs.getString("units", "mgdl").compareTo("mgdl") == 0);
         smart_snoozing = prefs.getBoolean("smart_snoozing", true);
+        smart_alerting = prefs.getBoolean("smart_alerting", true);
         bg_ongoing = prefs.getBoolean("run_service_in_foreground", false);
     }
 
@@ -156,7 +156,8 @@ public void FileBasedNotifications(Context context) {
             if(activeBgAlert == null) {
                 Log.e(TAG, "FileBasedNotifications we have a new alert, starting to play it... " + newAlert.name);
                 // We need to create a new alert  and start playing
-                AlertPlayer.getPlayer().startAlert(context, newAlert, EditAlertActivity.unitsConvert2Disp(doMgdl, bgReading.calculated_value));
+                boolean trendingToAlertEnd = trendingToAlertEnd(context, true, newAlert);
+                AlertPlayer.getPlayer().startAlert(context, trendingToAlertEnd, newAlert, EditAlertActivity.unitsConvert2Disp(doMgdl, bgReading.calculated_value));
                 return;
             }
 
@@ -164,7 +165,7 @@ public void FileBasedNotifications(Context context) {
             if (activeBgAlert.uuid.equals(newAlert.uuid)) {
                 // This is the same alert. Might need to play again...
                 Log.e(TAG, "FileBasedNotifications we have found an active alert, checking if we need to play it " + newAlert.name);
-                boolean trendingToAlertEnd = trendingToAlertEnd(context, newAlert);
+                boolean trendingToAlertEnd = trendingToAlertEnd(context, false, newAlert);
                 AlertPlayer.getPlayer().ClockTick(context, trendingToAlertEnd, EditAlertActivity.unitsConvert2Disp(doMgdl, bgReading.calculated_value));
                 return;
             }
@@ -192,7 +193,7 @@ public void FileBasedNotifications(Context context) {
                     Log.e(TAG, "FileBasedNotifications The existing alert has the same direcotion, checking if to playit newHigherAlert = " + newHigherAlert.name +
                             "activeBgAlert = " + activeBgAlert.name);
 
-                    boolean trendingToAlertEnd = trendingToAlertEnd(context, newHigherAlert);
+                    boolean trendingToAlertEnd = trendingToAlertEnd(context, false, newHigherAlert);
                     AlertPlayer.getPlayer().ClockTick(context, trendingToAlertEnd, EditAlertActivity.unitsConvert2Disp(doMgdl, bgReading.calculated_value));
                     return;
                 }
@@ -200,7 +201,8 @@ public void FileBasedNotifications(Context context) {
             // For now, we are stopping the old alert and starting a new one.
             Log.e(TAG, "Found a new alert, that is higher than the previous one will play it. " + newAlert.name);
             AlertPlayer.getPlayer().stopAlert(context, true, false);
-            AlertPlayer.getPlayer().startAlert(context, newAlert, EditAlertActivity.unitsConvert2Disp(doMgdl, bgReading.calculated_value));
+            boolean trendingToAlertEnd = trendingToAlertEnd(context, true, newAlert);
+            AlertPlayer.getPlayer().startAlert(context, trendingToAlertEnd, newAlert, EditAlertActivity.unitsConvert2Disp(doMgdl, bgReading.calculated_value));
             return;
 
         } else {
@@ -208,8 +210,12 @@ public void FileBasedNotifications(Context context) {
         }
     }
 
-    boolean trendingToAlertEnd(Context context, AlertType Alert) {
-        if(!smart_snoozing) {
+    boolean trendingToAlertEnd(Context context, Boolean newAlert, AlertType Alert) {
+        if(newAlert && !smart_alerting) {
+        //  User does not want smart alerting at all.
+            return false;
+        }
+        if((!newAlert) && (!smart_snoozing)) {
         //  User does not want smart snoozing at all.
             return false;
         }
diff --git a/app/src/main/res/xml/pref_notifications.xml b/app/src/main/res/xml/pref_notifications.xml
index 44bd8c0..3cc73d8 100644
--- a/app/src/main/res/xml/pref_notifications.xml
+++ b/app/src/main/res/xml/pref_notifications.xml
@@ -28,6 +28,12 @@
                 android:defaultValue="true" />
 
             <CheckBoxPreference
+                android:key="smart_alerting"
+                android:title="Smart alerting"
+                android:summary="Don't alert if bg is heading in the right direction"
+                android:defaultValue="true" />
+
+            <CheckBoxPreference
                 android:key="bg_alerts_from_main_menu"
                 android:title="Shortcut to Bg Level Alerts"
                 android:summary="Create a shortcut from main navigation to bg level screen"

diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/AutoStart.java b/app/src/main/java/com/eveningoutpost/dexdrip/AutoStart.java
index f34ebc0..276199b 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/AutoStart.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/AutoStart.java
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.content.Intent;
 import com.eveningoutpost.dexdrip.Models.UserError.Log;
+import com.eveningoutpost.dexdrip.Services.MissedReadingService;
 
 import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
 
@@ -15,5 +16,6 @@
     public void onReceive(Context context, Intent intent) {
         Log.d("DexDrip", "Service auto starter, starting!");
         CollectionServiceStarter.newStart(context);
+        context.startService(new Intent(context, MissedReadingService.class));
     }
 }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Services/MissedReadingService.java b/app/src/main/java/com/eveningoutpost/dexdrip/Services/MissedReadingService.java
index d290a8a..2d1c00c 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Services/MissedReadingService.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Services/MissedReadingService.java
@@ -16,6 +16,7 @@
 import com.eveningoutpost.dexdrip.Models.UserError.Log;
 import com.eveningoutpost.dexdrip.ImportedLibraries.dexcom.ReadDataShare;
 import com.eveningoutpost.dexdrip.Models.BgReading;
+import com.eveningoutpost.dexdrip.Models.UserNotification;
 import com.eveningoutpost.dexdrip.Sensor;
 import com.eveningoutpost.dexdrip.UtilityModels.AlertPlayer;
 import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
@@ -27,7 +28,7 @@
 
 public class MissedReadingService extends IntentService {
     int otherAlertSnooze;
-    private final static String TAG = AlertPlayer.class.getSimpleName();
+    private final static String TAG = MissedReadingService.class.getSimpleName();
 
     public MissedReadingService() {
         super("MissedReadingService");
@@ -48,24 +49,35 @@ protected void onHandleIntent(Intent intent) {
         otherAlertSnooze =  Integer.parseInt(prefs.getString("other_alerts_snooze", "20"));
 
         long now = new Date().getTime();
+        Log.d(TAG, "MissedReadingService onHandleIntent");
+        if (!bg_missed_alerts) {
+        	// we should not do anything in this case. if the ui, changes will be called again
+        	return;
+        }
 
-        if (bg_missed_alerts && 
-                BgReading.getTimeSinceLastReading() >= (bg_missed_minutes * 1000 * 60) &&
+        if (BgReading.getTimeSinceLastReading() >= (bg_missed_minutes * 1000 * 60) &&
                 prefs.getLong("alerts_disabled_until", 0) <= now) {
             Notifications.bgMissedAlert(context);
-            checkBackAfterSnoozeTime();
+            checkBackAfterSnoozeTime(now);
         } else  {
-            long alarmIn = prefs.getLong("alerts_disabled_until", 0) - now;
-            if (alarmIn <= 0) {
-                alarmIn = Long.parseLong(prefs.getString("bg_missed_minutes", "30"))* 1000 * 60 - BgReading.getTimeSinceLastReading();
-            }
-            Log.d(TAG, "Setting timer to  " + alarmIn / 60000 + " minutes from now" );
+            
+            long disabletime = prefs.getLong("alerts_disabled_until", 0) - now;
+            
+            long missedTime = bg_missed_minutes* 1000 * 60 - BgReading.getTimeSinceLastReading();
+            long alarmIn = Math.max(disabletime, missedTime);
             checkBackAfterMissedTime(alarmIn);
         }
     }
 
-    public void checkBackAfterSnoozeTime() {
-        setAlarm(otherAlertSnooze * 1000 * 60);
+    public void checkBackAfterSnoozeTime(long now) {
+    	// This is not 100% acurate, need to take in account also the time of when this alert was snoozed.
+        UserNotification userNotification = UserNotification.GetNotificationByType("bg_missed_alerts");
+        if(userNotification == null) {
+            setAlarm(otherAlertSnooze * 1000 * 60);
+        } else {
+            // we have an alert that is snoozed until userNotification.timestamp
+            setAlarm((long)userNotification.timestamp - now + otherAlertSnooze * 1000 * 60);
+        }
     }
 
     public void checkBackAfterMissedTime(long alarmIn) {
@@ -73,6 +85,7 @@ public void checkBackAfterMissedTime(long alarmIn) {
     }
 
     public void setAlarm(long alarmIn) {
+    	Log.d(TAG, "Setting timer to  " + alarmIn / 60000 + " minutes from now" );
         Calendar calendar = Calendar.getInstance();
         AlarmManager alarm = (AlarmManager) getSystemService(ALARM_SERVICE);
         long wakeTime = calendar.getTimeInMillis() + alarmIn;
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java b/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java
index 94a5e07..e568220 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java
@@ -24,7 +24,7 @@
 import android.widget.Toast;
 
 import com.eveningoutpost.dexdrip.Models.UserError.Log;
-
+import com.eveningoutpost.dexdrip.Services.MissedReadingService;
 import com.eveningoutpost.dexdrip.R;
 import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
 import com.eveningoutpost.dexdrip.UtilityModels.PebbleSync;
@@ -268,6 +268,7 @@ public void onCreate(Bundle savedInstanceState) {
             addPreferencesFromResource(R.xml.pref_community_help);
 
             bindTTSListener();
+            bindBgMissedAlertsListener();
             final Preference collectionMethod = findPreference("dex_collection_method");
             final Preference runInForeground = findPreference("run_service_in_foreground");
             final Preference wifiRecievers = findPreference("wifi_recievers_addresses");
@@ -469,6 +470,22 @@ public void onClick(DialogInterface dialog, int which) {
             });
         }
 
+        private static Preference.OnPreferenceChangeListener sBgMissedAlertsHandler = new Preference.OnPreferenceChangeListener() {
+            @Override
+            public boolean onPreferenceChange(Preference preference, Object newValue) {
+                Context context = preference.getContext();
+                context.startService(new Intent(context, MissedReadingService.class));
+                return true;
+            }
+        };
+
+        
+        private void bindBgMissedAlertsListener(){
+          findPreference("bg_missed_alerts").setOnPreferenceChangeListener(sBgMissedAlertsHandler);
+          findPreference("bg_missed_minutes").setOnPreferenceChangeListener(sBgMissedAlertsHandler);
+          findPreference("other_alerts_snooze").setOnPreferenceChangeListener(sBgMissedAlertsHandler);
+        }
+
     }
 
     public static boolean isNumeric(String str) {
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/xdrip.java b/app/src/main/java/com/eveningoutpost/dexdrip/xdrip.java
index de115ec..693eb89 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/xdrip.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/xdrip.java
@@ -2,6 +2,10 @@
 
 import android.app.Application;
 import android.preference.PreferenceManager;
+import android.content.Context;
+import android.content.Intent;
+
+import com.eveningoutpost.dexdrip.Services.MissedReadingService;
 
 import com.crashlytics.android.Crashlytics;
 import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
@@ -19,12 +23,14 @@
     public void onCreate() {
         super.onCreate();
         Fabric.with(this, new Crashlytics());
-        CollectionServiceStarter collectionServiceStarter = new CollectionServiceStarter(getApplicationContext());
+        Context context = getApplicationContext();
+        CollectionServiceStarter collectionServiceStarter = new CollectionServiceStarter(context);
         collectionServiceStarter.start(getApplicationContext());
         PreferenceManager.setDefaultValues(this, R.xml.pref_general, false);
         PreferenceManager.setDefaultValues(this, R.xml.pref_data_sync, false);
         PreferenceManager.setDefaultValues(this, R.xml.pref_notifications, false);
         PreferenceManager.setDefaultValues(this, R.xml.pref_data_source, false);
+        context.startService(new Intent(context, MissedReadingService.class));	
         new IdempotentMigrations(getApplicationContext()).performAll();
     }
 }

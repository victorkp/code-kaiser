diff --git a/app/app.iml b/app/app.iml
index 2569b8b..a7b3e9b 100644
--- a/app/app.iml
+++ b/app/app.iml
@@ -88,26 +88,35 @@
     </content>
     <orderEntry type="jdk" jdkName="Android API 22 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" exported="" name="ActiveAndroid" level="project" />
     <orderEntry type="library" exported="" name="okio-1.2.0" level="project" />
-    <orderEntry type="library" exported="" name="okhttp-2.2.0" level="project" />
+    <orderEntry type="library" exported="" name="zxing-android-integration-2.0.0" level="project" />
+    <orderEntry type="library" exported="" name="core-3.1.0" level="project" />
     <orderEntry type="library" exported="" name="crashlytics-2.2.3" level="project" />
     <orderEntry type="library" exported="" name="answers-1.1.2" level="project" />
     <orderEntry type="library" exported="" name="rxjava-1.0.0" level="project" />
     <orderEntry type="library" exported="" name="acra-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="mongo-java-driver-2.10.1" level="project" />
+    <orderEntry type="library" exported="" name="seeds-functional-16.0.1" level="project" />
+    <orderEntry type="library" exported="" name="seeds-strings-16.0.1" level="project" />
+    <orderEntry type="library" exported="" name="usb-serial-for-android-v010" level="project" />
+    <orderEntry type="library" exported="" name="seeds-base-16.0.1" level="project" />
+    <orderEntry type="library" exported="" name="fabric-1.3.0" level="project" />
+    <orderEntry type="library" exported="" name="recyclerview-v7-22.0.0" level="project" />
+    <orderEntry type="library" exported="" name="zxing-android-minimal-2.0.0" level="project" />
+    <orderEntry type="library" exported="" name="android-uploader-CORE_FOR_XDRIP" level="project" />
+    <orderEntry type="library" exported="" name="ActiveAndroid" level="project" />
+    <orderEntry type="library" exported="" name="okhttp-2.2.0" level="project" />
+    <orderEntry type="library" exported="" name="zxing-android-legacy-2.0.0" level="project" />
     <orderEntry type="library" exported="" name="retrofit-1.9.0" level="project" />
-    <orderEntry type="library" exported="" name="acra-4.5.0" level="project" />
     <orderEntry type="library" exported="" name="support-annotations-22.1.1" level="project" />
     <orderEntry type="library" exported="" name="beta-1.1.2" level="project" />
-    <orderEntry type="library" exported="" name="appcompat-v7-22.1.1" level="project" />
     <orderEntry type="library" exported="" name="gson-2.3.1" level="project" />
-    <orderEntry type="library" exported="" name="mongo-java-driver-2.10.1" level="project" />
+    <orderEntry type="library" exported="" name="slf4j-api-1.7.7" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-22.1.1" level="project" />
     <orderEntry type="library" exported="" name="snackbar-2.10.8" level="project" />
-    <orderEntry type="library" exported="" name="usb-serial-for-android-v010" level="project" />
+    <orderEntry type="library" exported="" name="seeds-primitives-16.0.1" level="project" />
     <orderEntry type="library" exported="" name="pebblekit-2.6.0" level="project" />
-    <orderEntry type="library" exported="" name="fabric-1.3.0" level="project" />
-    <orderEntry type="library" exported="" name="support-v4-22.1.1" level="project" />
     <orderEntry type="library" exported="" name="hellocharts-library-1.1" level="project" />
-    <orderEntry type="library" exported="" name="recyclerview-v7-22.0.0" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-22.1.1" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/BluetoothScan.java b/app/src/main/java/com/eveningoutpost/dexdrip/BluetoothScan.java
index a6f5d97..8b567f8 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/BluetoothScan.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/BluetoothScan.java
@@ -1,15 +1,22 @@
 package com.eveningoutpost.dexdrip;
 
 import android.annotation.TargetApi;
-import android.app.ListActivity;
+import android.app.Dialog;
 import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothDevice;
 import android.bluetooth.BluetoothManager;
+import android.bluetooth.le.BluetoothLeScanner;
+import android.bluetooth.le.ScanCallback;
+import android.bluetooth.le.ScanResult;
+import android.bluetooth.le.ScanSettings;
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
-import android.support.v4.widget.DrawerLayout;
+import android.preference.PreferenceManager;
+import android.text.TextUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -17,41 +24,44 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
+import android.widget.Button;
+import android.widget.EditText;
 import android.widget.ListView;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import com.activeandroid.query.Select;
 import com.eveningoutpost.dexdrip.Models.ActiveBluetoothDevice;
-import com.eveningoutpost.dexdrip.Services.DexCollectionService;
 import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
-import com.eveningoutpost.dexdrip.utils.ActivityWithMenu;
+import com.eveningoutpost.dexdrip.utils.AndroidBarcode;
 import com.eveningoutpost.dexdrip.utils.ListActivityWithMenu;
+import com.google.zxing.integration.android.IntentIntegrator;
+import com.google.zxing.integration.android.IntentResult;
 
 import java.util.ArrayList;
+import java.util.List;
+
+import lecho.lib.hellocharts.util.Utils;
 
 @TargetApi(android.os.Build.VERSION_CODES.JELLY_BEAN_MR2)
 public class BluetoothScan extends ListActivityWithMenu {
     public static String menu_name = "Scan for BT";
 
     private final static String TAG = BluetoothScan.class.getSimpleName();
-    private static final long SCAN_PERIOD = 10000;
+    private static final long SCAN_PERIOD = 30000;
     private boolean is_scanning;
-    private boolean has_bluetooth;
 
     private Handler mHandler;
     private LeDeviceListAdapter mLeDeviceListAdapter;
 
     private ArrayList<BluetoothDevice> found_devices;
     private BluetoothAdapter bluetooth_adapter;
+    private BluetoothLeScanner lollipopScanner;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_bluetooth_scan);
-
-        ListView lv = (ListView)findViewById(android.R.id.list);
-
         final BluetoothManager bluetooth_manager = (BluetoothManager) getSystemService(Context.BLUETOOTH_SERVICE);
 
         bluetooth_adapter = bluetooth_manager.getAdapter();
@@ -59,26 +69,21 @@ protected void onCreate(Bundle savedInstanceState) {
 
         if (bluetooth_adapter == null) {
             Toast.makeText(this, R.string.error_bluetooth_not_supported, Toast.LENGTH_LONG).show();
-            has_bluetooth = false;
             finish();
             return;
-        } else {
-            has_bluetooth = true;
         }
-        if(bluetooth_manager == null) {
-            Toast.makeText(this, "This device does not seem to support bluetooth", Toast.LENGTH_LONG).show();
+        if(!bluetooth_manager.getAdapter().isEnabled()) {
+            Toast.makeText(this, "Bluetooth is turned off on this device currently", Toast.LENGTH_LONG).show();
         } else {
-            if(!bluetooth_manager.getAdapter().isEnabled()) {
-                Toast.makeText(this, "Bluetooth is turned off on this device currently", Toast.LENGTH_LONG).show();
-            } else {
-                if(android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.JELLY_BEAN_MR2){
-                    Toast.makeText(this, "The android version of this device is not compatible with Bluetooth Low Energy", Toast.LENGTH_LONG).show();
-                }
+            if(android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.JELLY_BEAN_MR2){
+                Toast.makeText(this, "The android version of this device is not compatible with Bluetooth Low Energy", Toast.LENGTH_LONG).show();
             }
         }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)
+            initializeScannerCallback();
+
         mLeDeviceListAdapter = new LeDeviceListAdapter();
         setListAdapter(mLeDeviceListAdapter);
-
     }
 
     @Override
@@ -106,11 +111,15 @@ public boolean onCreateOptionsMenu(Menu menu) {
         }
         return true;
     }
+
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.menu_scan:
-                scanLeDevice(true);
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                    scanLeDeviceLollipop(true);
+                } else
+                    scanLeDevice(true);
                 BluetoothManager bluetooth_manager = (BluetoothManager) getSystemService(Context.BLUETOOTH_SERVICE);
                 Toast.makeText(this, "Scanning", Toast.LENGTH_LONG).show();
                 if(bluetooth_manager == null) {
@@ -134,9 +143,11 @@ public boolean onOptionsItemSelected(MenuItem item) {
         }
     }
 
+    @TargetApi(19)
     private void scanLeDevice(final boolean enable) {
         if (enable) {
             // Stops scanning after a pre-defined scan period.
+            Log.d(TAG,"Start scan 19");
             mHandler.postDelayed(new Runnable() {
                 @Override
                 public void run() {
@@ -155,16 +166,98 @@ public void run() {
         invalidateOptionsMenu();
     }
 
+    @TargetApi(21)
+    private void initializeScannerCallback() {
+        Log.d(TAG, "initializeScannerCallback");
+        mScanCallback = new ScanCallback() {
+            @Override
+            public void onBatchScanResults(final List<ScanResult> results) {
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        for (ScanResult result: results) {
+                            BluetoothDevice device = result.getDevice();
+                            if (device.getName() != null && device.getName().length() > 0) {
+                                mLeDeviceListAdapter.addDevice(device);
+                            }
+                        }
+                        mLeDeviceListAdapter.notifyDataSetChanged();
+                    }
+                });
+            }
+
+            @Override
+            public void onScanResult(int callbackType, ScanResult result) {
+                final BluetoothDevice device = result.getDevice();
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        if (device.getName() != null && device.getName().length() > 0) {
+                            mLeDeviceListAdapter.addDevice(device);
+                            mLeDeviceListAdapter.notifyDataSetChanged();
+                        }
+                    }
+                });
+            }
+        };
+    }
+
+    @TargetApi(21)
+    private void scanLeDeviceLollipop(final boolean enable) {
+        if (enable) {
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                lollipopScanner = bluetooth_adapter.getBluetoothLeScanner();
+            }
+
+            Log.d(TAG, "Starting scanner 21");
+            // Stops scanning after a pre-defined scan period.
+            mHandler.postDelayed(new Runnable() {
+                @Override
+                public void run() {
+                    is_scanning = false;
+                    lollipopScanner.stopScan(mScanCallback);
+                    invalidateOptionsMenu();
+                }
+            }, SCAN_PERIOD);
+            ScanSettings settings = new ScanSettings.Builder()
+                    .setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY)
+                    .build();
+            is_scanning = true;
+            lollipopScanner.startScan(null, settings, mScanCallback);
+        } else {
+            is_scanning = false;
+            lollipopScanner.stopScan(mScanCallback);
+        }
+        invalidateOptionsMenu();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        IntentResult scanResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
+        SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
+        if (scanResult == null || scanResult.getContents() == null) {
+            return;
+        }
+        if (scanResult.getFormatName().equals("CODE_128")) {
+            Log.d(TAG, "Setting serial number to: " + scanResult.getContents());
+            prefs.edit().putString("share_key", scanResult.getContents()).apply();
+            returnToHome();
+        }
+    }
+
     @Override
     protected void onListItemClick(ListView l, View v, int position, long id) {
         Log.d(TAG, "Item Clicked");
         final BluetoothDevice device = mLeDeviceListAdapter.getDevice(position);
-        if (device == null) return;
+        if (device == null || device.getName() == null) return;
         Toast.makeText(this, R.string.connecting_to_device, Toast.LENGTH_LONG).show();
 
         ActiveBluetoothDevice btDevice = new Select().from(ActiveBluetoothDevice.class)
                 .orderBy("_ID desc")
                 .executeSingle();
+
+        final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        prefs.edit().putString("last_connected_device_address", device.getAddress()).apply();
         if (btDevice == null) {
             ActiveBluetoothDevice newBtDevice = new ActiveBluetoothDevice();
             newBtDevice.name = device.getName();
@@ -175,13 +268,38 @@ protected void onListItemClick(ListView l, View v, int position, long id) {
             btDevice.address = device.getAddress();
             btDevice.save();
         }
+        if(device.getName().toLowerCase().contains("dexcom")) {
+            if(!CollectionServiceStarter.isBTShare(getApplicationContext())) {
+                prefs.edit().putString("dex_collection_method", "DexcomShare").apply();
+                prefs.edit().putBoolean("calibration_notifications", false).apply();
+            }
+            if(prefs.getString("share_key", "SM00000000").compareTo("SM00000000") == 0 || prefs.getString("share_key", "SM00000000").length() < 10) {
+                requestSerialNumber(prefs);
+            } else returnToHome();
+
+        } else if(device.getName().toLowerCase().contains("bridge")) {
+            if(!CollectionServiceStarter.isDexbridgeWixel(getApplicationContext()))
+                prefs.edit().putString("dex_collection_method", "DexbridgeWixel").apply();
+            if(prefs.getString("dex_txid", "00000").compareTo("00000") == 0 || prefs.getString("dex_txid", "00000").length() < 5) {
+                requestTransmitterId(prefs);
+            } else returnToHome();
+
+        } else if(device.getName().toLowerCase().contains("drip")) {
+            if (!CollectionServiceStarter.isBTWixel(getApplicationContext()))
+                prefs.edit().putString("dex_collection_method", "BluetoothWixel").apply();
+            returnToHome();
+        } else {
+            returnToHome();
+        }
+    }
 
+    public void returnToHome() {
         if (is_scanning) {
             bluetooth_adapter.stopLeScan(mLeScanCallback);
             is_scanning = false;
         }
         Intent intent = new Intent(this, Home.class);
-        CollectionServiceStarter.newStart(getApplicationContext());
+        CollectionServiceStarter.restartCollectionService(getApplicationContext());
         startActivity(intent);
         finish();
     }
@@ -192,7 +310,7 @@ protected void onListItemClick(ListView l, View v, int position, long id) {
 
         public LeDeviceListAdapter() {
             super();
-            mLeDevices = new ArrayList<BluetoothDevice>();
+            mLeDevices = new ArrayList<>();
             mInflator = BluetoothScan.this.getLayoutInflater();
         }
 
@@ -243,17 +361,17 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
             BluetoothDevice device = mLeDevices.get(i);
             final String deviceName = device.getName();
-            if (deviceName != null && deviceName.length() > 0)
-                viewHolder.deviceName.setText(deviceName);
-            else
-                viewHolder.deviceName.setText(R.string.unknown_device);
+            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+            if(prefs.getString("last_connected_device_address", "").compareTo(device.getAddress()) == 0) {
+                viewHolder.deviceName.setTextColor(Utils.COLOR_BLUE);
+                viewHolder.deviceAddress.setTextColor(Utils.COLOR_BLUE);
+            }
+            viewHolder.deviceName.setText(deviceName);
             viewHolder.deviceAddress.setText(device.getAddress());
             return view;
         }
     }
 
-
-
     private BluetoothAdapter.LeScanCallback mLeScanCallback =
             new BluetoothAdapter.LeScanCallback() {
 
@@ -262,17 +380,82 @@ public void onLeScan(final BluetoothDevice device, int rssi, byte[] scanRecord)
                     runOnUiThread(new Runnable() {
                         @Override
                         public void run() {
-                            mLeDeviceListAdapter.addDevice(device);
-                            mLeDeviceListAdapter.notifyDataSetChanged();
-
+                            if (device.getName() != null && device.getName().length() > 0) {
+                                mLeDeviceListAdapter.addDevice(device);
+                                mLeDeviceListAdapter.notifyDataSetChanged();
+                            }
                         }
                     });
                 }
             };
 
+    private ScanCallback mScanCallback;
+
     static class ViewHolder {
         TextView deviceName;
         TextView deviceAddress;
     }
 
+    private void requestSerialNumber(final SharedPreferences prefs) {
+        final Dialog dialog = new Dialog(BluetoothScan.this);
+        dialog.setContentView(R.layout.dialog_single_text_field);
+        Button saveButton = (Button) dialog.findViewById(R.id.saveButton);
+        Button cancelButton = (Button) dialog.findViewById(R.id.cancelButton);
+        final EditText serialNumberView = (EditText) dialog.findViewById(R.id.editTextField);
+        serialNumberView.setHint("SM00000000");
+        ((TextView) dialog.findViewById(R.id.instructionsTextField)).setText("Enter Your Dexcom Receiver Serial Number");
+
+        dialog.findViewById(R.id.scannerButton).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                new AndroidBarcode(BluetoothScan.this).scan();
+                dialog.dismiss();
+            }
+        });
+
+        saveButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(!TextUtils.isEmpty(serialNumberView.getText()))
+                    prefs.edit().putString("share_key", serialNumberView.getText().toString()).apply();
+                dialog.dismiss();
+                returnToHome();
+            }
+        });
+        cancelButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                dialog.dismiss();
+            }
+        });
+        dialog.show();
+    }
+
+    private void requestTransmitterId(final SharedPreferences prefs) {
+        final Dialog dialog = new Dialog(BluetoothScan.this);
+        dialog.setContentView(R.layout.dialog_single_text_field);
+        Button saveButton = (Button) dialog.findViewById(R.id.saveButton);
+        Button cancelButton = (Button) dialog.findViewById(R.id.cancelButton);
+        final EditText serialNumberView = (EditText) dialog.findViewById(R.id.editTextField);
+        serialNumberView.setHint("00000");
+        ((TextView) dialog.findViewById(R.id.instructionsTextField)).setText("Enter Your Dexcom Transmitter ID");
+
+        saveButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(!TextUtils.isEmpty(serialNumberView.getText())) {
+                    prefs.edit().putString("dex_txid", serialNumberView.getText().toString()).apply();
+                }
+                dialog.dismiss();
+                returnToHome();
+            }
+        });
+        cancelButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                dialog.dismiss();
+            }
+        });
+        dialog.show();
+    }
 }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/SystemStatus.java b/app/src/main/java/com/eveningoutpost/dexdrip/SystemStatus.java
index 1912dc4..0fca285 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/SystemStatus.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/SystemStatus.java
@@ -1,38 +1,29 @@
 package com.eveningoutpost.dexdrip;
 
-import android.app.Activity;
 import android.bluetooth.BluetoothAdapter;
 import android.bluetooth.BluetoothDevice;
 import android.bluetooth.BluetoothManager;
 import android.bluetooth.BluetoothProfile;
 import android.content.Context;
-import android.content.Intent;
 import android.content.SharedPreferences;
-import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.graphics.Point;
 import android.os.Bundle;
+import android.os.Handler;
 import android.preference.PreferenceManager;
-import android.support.v4.widget.DrawerLayout;
-import android.text.TextUtils;
 import android.util.Log;
 import android.view.Display;
-import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
-import android.widget.EditText;
 import android.widget.ImageButton;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import com.eveningoutpost.dexdrip.Models.ActiveBluetoothDevice;
-import com.eveningoutpost.dexdrip.Models.Calibration;
 import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
 import com.eveningoutpost.dexdrip.utils.ActivityWithMenu;
 
 import java.lang.reflect.Method;
-import java.sql.Timestamp;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -134,7 +125,7 @@ private void setSensorStatus(){
 
 
     private void setVersionName(){
-        String versionName = null;
+        String versionName;
         try {
             versionName = getPackageManager().getPackageInfo(getPackageName(), PackageManager.GET_META_DATA).versionName;
             version_name_view.setText(versionName);
@@ -199,7 +190,7 @@ private void forgetDeviceListener() {
         forget_device.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
                 if(mBluetoothManager != null && ActiveBluetoothDevice.first() != null) {
-                    BluetoothAdapter bluetoothAdapter = mBluetoothManager.getAdapter();
+                    final BluetoothAdapter bluetoothAdapter = mBluetoothManager.getAdapter();
                     if(bluetoothAdapter != null) {
                         for( BluetoothDevice bluetoothDevice : bluetoothAdapter.getBondedDevices()) {
                             if(bluetoothDevice.getAddress().compareTo(ActiveBluetoothDevice.first().address) == 0) {
@@ -214,16 +205,22 @@ public void onClick(View v) {
 
                         ActiveBluetoothDevice.forget();
                         bluetoothAdapter.disable();
-                        bluetoothAdapter.enable();
-                        try {
-                            wait(1000);
-                        } catch(Exception e) {
-                            Log.e("SystemStatus", "Error stalling");
-                        }
+
+
+                        mHandler.postDelayed(new Runnable() {
+                            public void run() {
+                                bluetoothAdapter.enable();
+                                set_current_values();
+                                mHandler2.postDelayed(new Runnable() {
+                                    public void run() {
+                                        CollectionServiceStarter.restartCollectionService(getApplicationContext());
+                                        set_current_values();
+                                    }
+                                }, 5000);
+                            }
+                        }, 1000);
                     }
                 }
-                CollectionServiceStarter.restartCollectionService(getApplicationContext());
-                set_current_values();
             }
         });
     }
@@ -235,4 +232,8 @@ public void onClick(View v) {
             }
         });
     }
+
+    private Handler mHandler = new Handler();
+    private Handler mHandler2 = new Handler();
+
 }
diff --git a/app/src/main/res/drawable-hdpi/ic_scan.png b/app/src/main/res/drawable-hdpi/ic_scan.png
new file mode 100644
index 0000000..5932aad
Binary files /dev/null and b/app/src/main/res/drawable-hdpi/ic_scan.png differ
diff --git a/app/src/main/res/drawable-xhdpi/ic_scan.png b/app/src/main/res/drawable-xhdpi/ic_scan.png
new file mode 100644
index 0000000..330dc2f
Binary files /dev/null and b/app/src/main/res/drawable-xhdpi/ic_scan.png differ
diff --git a/app/src/main/res/drawable-xxhdpi/ic_scan.png b/app/src/main/res/drawable-xxhdpi/ic_scan.png
new file mode 100644
index 0000000..d535fda
Binary files /dev/null and b/app/src/main/res/drawable-xxhdpi/ic_scan.png differ
diff --git a/app/src/main/res/drawable/ic_scan.png b/app/src/main/res/drawable/ic_scan.png
new file mode 100644
index 0000000..fc5fafc
Binary files /dev/null and b/app/src/main/res/drawable/ic_scan.png differ
diff --git a/app/src/main/res/layout/dialog_single_text_field.xml b/app/src/main/res/layout/dialog_single_text_field.xml
new file mode 100644
index 0000000..19e7925
--- /dev/null
+++ b/app/src/main/res/layout/dialog_single_text_field.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:padding="10dp">
+    <TextView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="5dp"
+        android:id="@+id/instructionsTextField"
+        android:layout_gravity="center_horizontal"/>
+    <EditText
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/editTextField"
+        android:layout_margin="5dp"
+        android:layout_gravity="center_horizontal"
+        android:inputType="text"
+        android:hint=""/>
+    <ImageButton
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/scannerButton"
+        android:layout_margin="5dp"
+        android:layout_gravity="center_horizontal"
+        android:contentDescription="@string/scan_share2_barcode"
+        android:src="@drawable/ic_scan" />
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+        <Button
+            android:layout_width="0dp"
+            android:layout_weight="1"
+            android:layout_height="wrap_content"
+            android:text="Cancel"
+            android:id="@+id/cancelButton"/>
+        <Button
+            android:layout_width="0dp"
+            android:layout_weight="1"
+            android:layout_height="wrap_content"
+            android:text="Save"
+            android:id="@+id/saveButton"/>
+    </LinearLayout>
+</LinearLayout>
diff --git a/app/src/main/res/layout/x_drip_widget.xml b/app/src/main/res/layout/x_drip_widget.xml
index 0b10b08..e523adb 100644
--- a/app/src/main/res/layout/x_drip_widget.xml
+++ b/app/src/main/res/layout/x_drip_widget.xml
@@ -14,7 +14,8 @@
             android:paddingStart="5dp"
             android:paddingEnd="5dp"
             android:paddingTop="2dp"
-            android:paddingBottom="10dp">
+            android:paddingBottom="10dp"
+            android:layout_gravity="center_vertical">
         <LinearLayout
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"

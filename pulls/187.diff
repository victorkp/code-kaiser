diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/utils/BgToSpeech.java b/app/src/main/java/com/eveningoutpost/dexdrip/utils/BgToSpeech.java
index 00e5659..4b7e552 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/utils/BgToSpeech.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/utils/BgToSpeech.java
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.media.AudioManager;
 import android.preference.PreferenceManager;
 import android.speech.tts.TextToSpeech;
 import com.eveningoutpost.dexdrip.Models.UserError.Log;
@@ -89,16 +90,20 @@ public void onInit(int status) {
     }
 
     private void speakInternal(final double value, long timestamp){
+
+        // SHIELDING
         if(timestamp < System.currentTimeMillis()-4*60*1000){
             // don't read old values.
             return;
         }
 
         final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-        if (! prefs.getBoolean("bg_to_speech", false)){
+        if (! prefs.getBoolean("bg_to_speech", false) || isOngoingCall()){
             return;
         }
 
+        // ACTUAL TTS:
+
         int result = tts.speak(calculateText(value, prefs), TextToSpeech.QUEUE_FLUSH, null);
             if(result == TextToSpeech.SUCCESS){
                 Log.d("BgToSpeech", "successfully spoken");
@@ -123,6 +128,10 @@ private String calculateText(double value, SharedPreferences prefs) {
                 df.setMaximumFractionDigits(1);
                 df.setMinimumFractionDigits(1);
                 text =  df.format(value* Constants.MGDL_TO_MMOLL);
+                if(tts.getLanguage().getLanguage().startsWith("en")){
+                    // in case the text has a comma in current locale but TTS defaults to English
+                    text.replace(",", ".");
+                }
             }
         } else if (value > 12) {
             text =  "low";
@@ -141,4 +150,11 @@ public static void installTTSData(Context ctx){
         ctx.startActivity(intent);
     }
 
+
+    private boolean isOngoingCall(){
+        AudioManager manager = (AudioManager)context.getSystemService(Context.AUDIO_SERVICE);
+        return (manager.getMode()==AudioManager.MODE_IN_CALL);
+    }
+
+
 }

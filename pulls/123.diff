diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 9c0e30a..9327b14 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -32,7 +32,7 @@
             android:value="DexDrip.db" />
         <meta-data
             android:name="AA_DB_VERSION"
-            android:value="34" />
+            android:value="35" />
 
         <provider
             android:name="com.activeandroid.content.ContentProvider"
diff --git a/app/src/main/assets/migrations/35.sql b/app/src/main/assets/migrations/35.sql
new file mode 100644
index 0000000..059b3fc
--- /dev/null
+++ b/app/src/main/assets/migrations/35.sql
@@ -0,0 +1 @@
+UPDATE alerttype SET vibrate=1
\ No newline at end of file
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java b/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java
index 5c5913f..c59955b 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/EditAlertActivity.java
@@ -62,6 +62,7 @@
     private Button buttonTest;
     private Button buttonPreSnooze;
     private CheckBox checkboxAllDay;
+    private CheckBox checkboxVibrate;
 
     private LinearLayout layoutTimeBetween;
     private LinearLayout timeInstructions;
@@ -128,6 +129,7 @@ protected void onCreate(Bundle savedInstanceState) {
         alertMp3File = (EditText) findViewById(R.id.edit_alert_mp3_file);
 
         checkboxAllDay = (CheckBox) findViewById(R.id.check_alert_time);
+        checkboxVibrate = (CheckBox) findViewById(R.id.check_vibrate);
 
         layoutTimeBetween = (LinearLayout) findViewById(R.id.time_between);
         timeInstructions = (LinearLayout) findViewById(R.id.time_instructions);
@@ -158,6 +160,7 @@ protected void onCreate(Bundle savedInstanceState) {
             alertMp3File.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
 
             checkboxAllDay.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
+            checkboxVibrate.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
 
             viewTimeStart.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
             viewTimeEnd.setTextSize(TypedValue.COMPLEX_UNIT_SP, 30);
@@ -188,6 +191,7 @@ protected void onCreate(Bundle savedInstanceState) {
             // This is a new alert
             above = Boolean.parseBoolean(getExtra(savedInstanceState, "above"));
             checkboxAllDay.setChecked(true);
+            checkboxVibrate.setChecked(true);
             checkboxAlertOverride.setChecked(true);
 
             audioPath = "";
@@ -218,6 +222,7 @@ protected void onCreate(Bundle savedInstanceState) {
             alertText.setText(at.name);
             alertThreshold.setText(unitsConvert2Disp(doMgdl, at.threshold));
             checkboxAllDay.setChecked(at.all_day);
+            checkboxVibrate.setChecked(at.vibrate);
             checkboxAlertOverride.setChecked(at.override_silent_mode);
             defaultSnooze = at.default_snooze;
             if(defaultSnooze == 0) {
@@ -240,6 +245,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 alertThreshold.setKeyListener(null);
                 buttonalertMp3.setEnabled(false);
                 checkboxAllDay.setEnabled(false);
+                checkboxVibrate.setEnabled(false);
                 checkboxAlertOverride.setEnabled(false);
                 reraise.setEnabled(false);
             }
@@ -430,13 +436,14 @@ public void onClick(View v) {
                     Toast.makeText(getApplicationContext(), "start time and end time of alert can not be equal",Toast.LENGTH_LONG).show();
                     return;
                 }
+                boolean vibrate = checkboxVibrate.isChecked();
                 boolean overrideSilentMode = checkboxAlertOverride.isChecked();
 
                 String mp3_file = audioPath;
                 if (uuid != null) {
-                    AlertType.update_alert(uuid, alertText.getText().toString(), above, threshold, allDay, alertReraise, mp3_file, timeStart, timeEnd, overrideSilentMode, defaultSnooze);
+                    AlertType.update_alert(uuid, alertText.getText().toString(), above, threshold, allDay, alertReraise, mp3_file, timeStart, timeEnd, overrideSilentMode, defaultSnooze, vibrate);
                 }  else {
-                    AlertType.add_alert(null, alertText.getText().toString(), above, threshold, allDay, alertReraise, mp3_file, timeStart, timeEnd, overrideSilentMode, defaultSnooze);
+                    AlertType.add_alert(null, alertText.getText().toString(), above, threshold, allDay, alertReraise, mp3_file, timeStart, timeEnd, overrideSilentMode, defaultSnooze, vibrate);
                 }
                 Intent returnIntent = new Intent();
                 setResult(RESULT_OK,returnIntent);
@@ -765,9 +772,10 @@ public void testAlert() {
             Toast.makeText(getApplicationContext(), "start time and end time of alert can not be equal",Toast.LENGTH_LONG).show();
             return;
         }
+        boolean vibrate = checkboxVibrate.isChecked();
         boolean overrideSilentMode = checkboxAlertOverride.isChecked();
         String mp3_file = audioPath;
-        AlertType.testAlert(alertText.getText().toString(), above, threshold, allDay, 1, mp3_file, timeStart, timeEnd, overrideSilentMode, defaultSnooze, mContext);
+        AlertType.testAlert(alertText.getText().toString(), above, threshold, allDay, 1, mp3_file, timeStart, timeEnd, overrideSilentMode, defaultSnooze, vibrate, mContext);
 
     }
 }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java b/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
index 1f4c6e1..f403012 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
@@ -241,7 +241,8 @@ public static void add_alert(
             int start_time_minutes,
             int end_time_minutes,
             boolean override_silent_mode,
-            int snooze) {
+            int snooze,
+            boolean vibrate) {
         AlertType at = new AlertType();
         at.name = name;
         at.above = above;
@@ -255,6 +256,7 @@ public static void add_alert(
         at.end_time_minutes = end_time_minutes;
         at.override_silent_mode = override_silent_mode;
         at.default_snooze = snooze;
+        at.vibrate = vibrate;
         at.save();
     }
 
@@ -269,7 +271,8 @@ public static void update_alert(
             int start_time_minutes,
             int end_time_minutes,
             boolean override_silent_mode,
-            int snooze) {
+            int snooze,
+            boolean vibrate) {
 
         if(uuid.equals(LOW_ALERT_55)) {
             // This alert can not be removed/updated
@@ -289,6 +292,7 @@ public static void update_alert(
         at.end_time_minutes = end_time_minutes;
         at.override_silent_mode = override_silent_mode;
         at.default_snooze = snooze;
+        at.vibrate = vibrate;
         at.save();
     }
     public static void remove_alert(String uuid) {
@@ -348,7 +352,7 @@ public static void print_all() {
     // This alert will not be editable/removable.
     public static void CreateStaticAlerts() {
         if(get_alert(LOW_ALERT_55) == null) {
-            add_alert(LOW_ALERT_55, "low alert (unchangable)", false, 55, true, 1, null, 0, 0, true, 20);
+            add_alert(LOW_ALERT_55, "low alert (unchangable)", false, 55, true, 1, null, 0, 0, true, 20, true);
         }
     }
 
@@ -356,9 +360,9 @@ public static void CreateStaticAlerts() {
     public static void testAll(Context context) {
 
         remove_all();
-        add_alert(null, "high alert 1", true, 180, true, 10, null, 0, 0, true, 20);
-        add_alert(null, "high alert 2", true, 200, true, 10, null, 0, 0, true, 20);
-        add_alert(null, "high alert 3", true, 220, true, 10, null, 0, 0, true, 20);
+        add_alert(null, "high alert 1", true, 180, true, 10, null, 0, 0, true, 20, true);
+        add_alert(null, "high alert 2", true, 200, true, 10, null, 0, 0, true, 20, true);
+        add_alert(null, "high alert 3", true, 220, true, 10, null, 0, 0, true, 20, true);
         print_all();
         AlertType a1 = get_highest_active_alert(context, 190);
         Log.e(TAG, "a1 = " + a1.toString());
@@ -369,8 +373,8 @@ public static void testAll(Context context) {
         AlertType a3 = get_alert(a1.uuid);
         Log.e(TAG, "a1 == a3 ? need to see true " + (a1==a3) + a1 + " " + a3);
 
-        add_alert(null, "low alert 1", false, 80, true, 10, null, 0, 0, true, 20);
-        add_alert(null, "low alert 2", false, 60, true, 10, null, 0, 0, true, 20);
+        add_alert(null, "low alert 1", false, 80, true, 10, null, 0, 0, true, 20, true);
+        add_alert(null, "low alert 2", false, 60, true, 10, null, 0, 0, true, 20, true);
 
         AlertType al1 = get_highest_active_alert(context, 90);
         Log.e(TAG, "al1 should be null  " + al1);
@@ -451,6 +455,7 @@ public static void testAlert(
         int end_time_minutes,
         boolean override_silent_mode,
         int snooze,
+        boolean vibrate,
         Context context) {
             AlertType at = new AlertType();
             at.name = name;
@@ -465,6 +470,7 @@ public static void testAlert(
             at.end_time_minutes = end_time_minutes;
             at.override_silent_mode = override_silent_mode;
             at.default_snooze = snooze;
+            at.vibrate = vibrate;
             AlertPlayer.getPlayer().startAlert(context, false, at, "TEST");
     }
 
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
index 4f3adf5..8866bf9 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/AlertPlayer.java
@@ -256,7 +256,7 @@ private void Vibrate(Context ctx, AlertType alert, String bgValue, Boolean overr
                 }
             }
         }
-        if (profile != ALERT_PROFILE_SILENT ) {
+        if (profile != ALERT_PROFILE_SILENT && alert.vibrate) {
             builder.setVibrate(Notifications.vibratePattern);
         }
         NotificationManager mNotifyMgr = (NotificationManager) ctx.getSystemService(Context.NOTIFICATION_SERVICE);
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java
index 8c0be72..5fc1f35 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/IdempotentMigrations.java
@@ -48,8 +48,8 @@ private void migrateBGAlerts() {
             int bg_low_snooze = Integer.parseInt(prefs.getString("bg_snooze",  Integer.toString(SnoozeActivity.getDefaultSnooze(false))));
 
 
-            AlertType.add_alert(null, "High Alert", true, highMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_high_snooze);
-            AlertType.add_alert(null, "Low Alert", false, lowMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_low_snooze);
+            AlertType.add_alert(null, "High Alert", true, highMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_high_snooze, true);
+            AlertType.add_alert(null, "Low Alert", false, lowMark, true, 1, bg_notification_sound, 0, 0, bg_sound_in_silent, bg_low_snooze, true);
             prefs.edit().putBoolean("bg_notifications", false).apply();
         }
     }
diff --git a/app/src/main/res/layout/activity_edit_alert.xml b/app/src/main/res/layout/activity_edit_alert.xml
index 31a8271..37190d3 100644
--- a/app/src/main/res/layout/activity_edit_alert.xml
+++ b/app/src/main/res/layout/activity_edit_alert.xml
@@ -300,7 +300,29 @@
 
                     </LinearLayout>
 
+                    <LinearLayout
+                        android:orientation="horizontal"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:paddingTop="20dp">
 
+                        <TextView
+                            android:id="@+id/view_alert_vibrate"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:gravity="left"
+                            android:text="Vibrate on alert"
+                            android:textSize="15sp"
+                            />
+
+                        <CheckBox
+                            android:id="@+id/check_vibrate"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text=""
+                            android:textSize="15sp"/>
+
+                    </LinearLayout>
                 </LinearLayout>
             <LinearLayout
                 android:id="@+id/linear_layout_test_buttons"

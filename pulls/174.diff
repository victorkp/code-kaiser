diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
index f039651..e2627b4 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
@@ -251,8 +251,16 @@ public void updateCurrentBgInfo() {
             updateCurrentBgInfoForWifiWixel(notificationText);
         }
         if (prefs.getLong("alerts_disabled_until", 0) > new Date().getTime()) {
-            notificationText.append("\n ALERTS CURRENTLY DISABLED");
-        }
+            notificationText.append("\n ALL ALERTS CURRENTLY DISABLED");
+        } else if (prefs.getLong("low_alerts_disabled_until", 0) > new Date().getTime()
+			&&
+			prefs.getLong("high_alerts_disabled_until", 0) > new Date().getTime()) {
+            notificationText.append("\n LOW AND HIGH ALERTS CURRENTLY DISABLED");
+        } else if (prefs.getLong("low_alerts_disabled_until", 0) > new Date().getTime()) {
+            notificationText.append("\n LOW ALERTS CURRENTLY DISABLED");
+        } else if (prefs.getLong("high_alerts_disabled_until", 0) > new Date().getTime()) {
+            notificationText.append("\n HIGH ALERTS CURRENTLY DISABLED");
+        } 
         mNavigationDrawerFragment = (NavigationDrawerFragment) getFragmentManager().findFragmentById(R.id.navigation_drawer);
         mNavigationDrawerFragment.setUp(R.id.navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout), menu_name, this);
     }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java b/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
index 309598c..9bb871f 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Models/AlertType.java
@@ -126,7 +126,7 @@ public static AlertType get_highest_active_alert(Context context, double bg) {
             Log.d(TAG_ALERT, "We are in an clear state, but not for too long. Alerts are disabled");
             return null;
         }
-        at = get_highest_active_alert_helper(bg);
+        at = get_highest_active_alert_helper(bg, prefs);
         if (at != null) {
             Log.d(TAG_ALERT, "get_highest_active_alert_helper returned alert uuid = " + at.uuid + " alert name = " + at.name);
         } else {
@@ -142,34 +142,45 @@ public static void checkIfMissedReadingAlert(Context context){
 
 
     // bg_minute is the estimatin of the bg change rate
-    private static AlertType get_highest_active_alert_helper(double bg) {
+    private static AlertType get_highest_active_alert_helper(double bg, SharedPreferences prefs) {
         // Chcek the low alerts
 
-        List<AlertType> lowAlerts  = new Select()
-            .from(AlertType.class)
-            .where("threshold >= ?", bg)
-            .where("above = ?", false)
-            .orderBy("threshold asc")
-            .execute();
-
-        for (AlertType lowAlert : lowAlerts) {
-            if(lowAlert.should_alarm(bg)) {
-                return lowAlert;
+        if(prefs.getLong("low_alerts_disabled_until", 0) > new Date().getTime()){
+            Log.i("NOTIFICATIONS", "get_highest_active_alert_helper: Low alerts are currently disabled!! Skipping low alerts");
+            ;
+        } else {
+            List<AlertType> lowAlerts  = new Select()
+                    .from(AlertType.class)
+                    .where("threshold >= ?", bg)
+                    .where("above = ?", false)
+                    .orderBy("threshold asc")
+                    .execute();
+
+            for (AlertType lowAlert : lowAlerts) {
+                if(lowAlert.should_alarm(bg)) {
+                    return lowAlert;
+                }
             }
         }
 
-        // If no low alert found, check higher alert.
-        List<AlertType> HighAlerts  = new Select()
-            .from(AlertType.class)
-            .where("threshold <= ?", bg)
-            .where("above = ?", true)
-            .orderBy("threshold desc")
-            .execute();
 
-        for (AlertType HighAlert : HighAlerts) {
-            //Log.e(TAG, "Testing high alert " + HighAlert.toString());
-            if(HighAlert.should_alarm(bg)) {
-                return HighAlert;
+        // If no low alert found or low alerts disabled, check higher alert.
+        if(prefs.getLong("high_alerts_disabled_until", 0) > new Date().getTime()){
+            Log.i("NOTIFICATIONS", "get_highest_active_alert_helper: High alerts are currently disabled!! Skipping high alerts");
+            ;
+        } else {
+            List<AlertType> HighAlerts  = new Select()
+                    .from(AlertType.class)
+                    .where("threshold <= ?", bg)
+                    .where("above = ?", true)
+                    .orderBy("threshold desc")
+                    .execute();
+
+            for (AlertType HighAlert : HighAlerts) {
+                //Log.e(TAG, "Testing high alert " + HighAlert.toString());
+                if(HighAlert.should_alarm(bg)) {
+                    return HighAlert;
+                }
             }
         }
         // no alert found
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/SnoozeActivity.java b/app/src/main/java/com/eveningoutpost/dexdrip/SnoozeActivity.java
index 6dab5dc..8275e55 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/SnoozeActivity.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/SnoozeActivity.java
@@ -40,6 +40,10 @@
     Button buttonSnooze;
     Button disableAlerts;
     Button clearDisabled;
+    Button disableLowAlerts;
+    Button clearLowDisabled;
+    Button disableHighAlerts;
+    Button clearHighDisabled;
     SharedPreferences prefs;
     boolean doMgdl;
 
@@ -125,6 +129,16 @@ public String getMenuName() {
 
     public void addListenerOnButton() {
         buttonSnooze = (Button)findViewById(R.id.button_snooze);
+		
+		//low alerts
+		disableLowAlerts = (Button)findViewById(R.id.button_disable_low_alerts);
+		clearLowDisabled = (Button)findViewById(R.id.enable_low_alerts);
+        
+		//high alerts
+		disableHighAlerts = (Button)findViewById(R.id.button_disable_high_alerts);
+		clearHighDisabled = (Button)findViewById(R.id.enable_high_alerts);
+
+		//all alerts
         disableAlerts = (Button)findViewById(R.id.button_disable_alerts);
         clearDisabled = (Button)findViewById(R.id.enable_alerts);
         buttonSnooze.setOnClickListener(new View.OnClickListener() {
@@ -141,7 +155,42 @@ public void onClick(View v) {
         });
         showDisableEnableButtons();
 
-        disableAlerts.setOnClickListener(new View.OnClickListener() {
+        setOnClickListenerOnDisableButton(disableAlerts, "alerts_disabled_until");
+        setOnClickListenerOnDisableButton(disableLowAlerts, "low_alerts_disabled_until");
+        setOnClickListenerOnDisableButton(disableHighAlerts, "high_alerts_disabled_until");
+
+        setOnClickListenerOnClearDisabledButton(clearDisabled, "alerts_disabled_until");
+        setOnClickListenerOnClearDisabledButton(clearLowDisabled, "low_alerts_disabled_until");
+        setOnClickListenerOnClearDisabledButton(clearHighDisabled, "high_alerts_disabled_until");
+    }
+
+    /**
+     * Functionality used at least three times moved to a function. Adds an onClickListener that will re-enable the identified alert
+     * @param button to which onclicklistener should be added
+     * @param alert identifies the alert, the text string used in the preferences for example alerts_disabled_until
+     */
+    private void setOnClickListenerOnClearDisabledButton(Button button, String alert) {
+        final String theAlert = alert;
+        button.setOnClickListener(new View.OnClickListener() {
+            public void onClick(View v) {
+                prefs.edit().putLong(theAlert, 0).apply();
+                showDisableEnableButtons();
+            }
+        });
+    }
+
+    /**
+     * Functionality used at least three times moved to a function. Adds an onClickListener that will disable the identified alert<br>
+     * Depending on type of disable, also active alarms will be set to inactive<br>
+     * - if alert = "alerts_disabled_until" then the active bg alert will be deleted if any<br>
+     * - if alert = "low_alerts_disabled_until" and if active low bg alert exists then it will be deleted<br>
+     * - if alert = "high_alerts_disabled_until" and if active high bg alert exists then it will be deleted<br>
+     * @param button to which onclicklistener should be added
+     * @param alert identifies the alert, the text string used in the preferences ie alerts_disabled_until, low_alerts_disabled_until or high_alerts_disabled_until
+     */
+    private void setOnClickListenerOnDisableButton(Button button, String alert) {
+        final String disableType = alert;
+        button.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
                 final Dialog d = new Dialog(SnoozeActivity.this);
                 d.setTitle("Default Snooze");
@@ -155,7 +204,28 @@ public void onClick(View v) {
                     @Override
                     public void onClick(View v) {
                         Long disableUntil = new Date().getTime() + (SnoozeActivity.getTimeFromSnoozeValue(snoozeValue.getValue()) * 1000 * 60);
-                        prefs.edit().putLong("alerts_disabled_until", disableUntil).apply();
+                        prefs.edit().putLong(disableType, disableUntil).apply();
+                        //check if active bg alert exists and delete it depending on type of alert
+                        ActiveBgAlert aba = ActiveBgAlert.getOnly();
+                        if (aba != null) {
+                            AlertType activeBgAlert = ActiveBgAlert.alertTypegetOnly();
+                            if (disableType.equalsIgnoreCase("alerts_disabled_until")
+                            || (activeBgAlert.above && disableType.equalsIgnoreCase("high_alerts_disabled_until"))
+                            || (!activeBgAlert.above && disableType.equalsIgnoreCase("low_alerts_disabled_until"))
+                                    ) {
+                                //active bg alert exists which is a type that is being disabled so let's remove it completely from the database
+                                ActiveBgAlert.ClearData();
+                                //also make sure the text in the Activity is changed
+                                displayStatus();
+                            }
+                        }
+
+                        if (disableType.equalsIgnoreCase("alerts_disabled_until")) {
+                            //disabling all , after the Snooze time set, all alarms will be re-enabled, inclusive low and high bg alarms
+                            prefs.edit().putLong("high_alerts_disabled_until", 0).apply();
+                            prefs.edit().putLong("low_alerts_disabled_until", 0).apply();
+                        }
+
                         d.dismiss();
                         showDisableEnableButtons();
                     }
@@ -172,21 +242,34 @@ public void onClick(View v) {
             }
         });
 
-        clearDisabled.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View v) {
-                prefs.edit().putLong("alerts_disabled_until", 0).apply();
-                showDisableEnableButtons();
-            }
-        });
     }
 
     public void showDisableEnableButtons() {
         if(prefs.getLong("alerts_disabled_until", 0) > new Date().getTime()){
             disableAlerts.setVisibility(View.GONE);
             clearDisabled.setVisibility(View.VISIBLE);
+            //all alerts are disabled so no need to show the buttons related to disabling/enabling the low and high alerts
+            disableLowAlerts.setVisibility(View.GONE);
+            clearLowDisabled.setVisibility(View.GONE);
+            disableHighAlerts.setVisibility(View.GONE);
+            clearHighDisabled.setVisibility(View.GONE);
         } else {
             clearDisabled.setVisibility(View.GONE);
             disableAlerts.setVisibility(View.VISIBLE);
+            if (prefs.getLong("low_alerts_disabled_until", 0) > new Date().getTime()) {
+                disableLowAlerts.setVisibility(View.GONE);
+                clearLowDisabled.setVisibility(View.VISIBLE);
+            } else {
+                disableLowAlerts.setVisibility(View.VISIBLE);
+                clearLowDisabled.setVisibility(View.GONE);
+            }
+            if (prefs.getLong("high_alerts_disabled_until", 0) > new Date().getTime()) {
+                disableHighAlerts.setVisibility(View.GONE);
+                clearHighDisabled.setVisibility(View.VISIBLE);
+            } else {
+                disableHighAlerts.setVisibility(View.VISIBLE);
+                clearHighDisabled.setVisibility(View.GONE);
+            }
         }
     }
 
diff --git a/app/src/main/res/layout/activity_snooze.xml b/app/src/main/res/layout/activity_snooze.xml
index e296c47..9db0056 100644
--- a/app/src/main/res/layout/activity_snooze.xml
+++ b/app/src/main/res/layout/activity_snooze.xml
@@ -10,7 +10,7 @@
         <LinearLayout
             android:layout_width="fill_parent"
             android:layout_height="0dp"
-            android:layout_weight=".3"
+            android:layout_weight=".2"
             android:orientation="vertical"
             android:gravity="center_horizontal">
             <Button
@@ -24,7 +24,7 @@
         <LinearLayout
             android:layout_width="fill_parent"
             android:layout_height="0dp"
-            android:layout_weight=".3"
+            android:layout_weight=".25"
             android:orientation="vertical"
             android:gravity="center_horizontal">
 
@@ -38,7 +38,7 @@
         <LinearLayout
             android:layout_width="fill_parent"
             android:layout_height="0dp"
-            android:layout_weight=".3"
+            android:layout_weight=".25"
             android:orientation="vertical"
             android:gravity="center_horizontal"
             android:paddingTop="10dp">
@@ -54,10 +54,30 @@
         <LinearLayout
             android:layout_width="fill_parent"
             android:layout_height="0dp"
-            android:layout_weight=".1"
+            android:layout_weight=".3"
             android:orientation="vertical"
             android:gravity="center_horizontal">
             <Button
+                android:id="@+id/button_disable_low_alerts"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="Disable Low alerts"/>
+            <Button
+                android:id="@+id/enable_low_alerts"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="Re-Enable Low Alerts"/>
+            <Button
+                android:id="@+id/button_disable_high_alerts"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="Disable High alerts"/>
+            <Button
+                android:id="@+id/enable_high_alerts"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="Re-Enable High Alerts"/>
+            <Button
                 android:id="@+id/button_disable_alerts"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
@@ -66,7 +86,7 @@
                 android:id="@+id/enable_alerts"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
-                android:text="Re-Enable Alerts"/>
+                android:text="Re-Enable All Alerts"/>
         </LinearLayout>
 
 

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 30448bf..556db8a 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -224,6 +224,10 @@
         <activity
             android:name=".FollowerManagementActivity"
             android:label="Manage Followers" />
+        <activity
+            android:name=".utils.SdcardImportExport"
+            android:noHistory="true"
+            android:label="Settings on external storage" />
 
         <service
             android:name=".Services.SnoozeOnNotificationDismissService"
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
index 480ff1e..f960048 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
@@ -43,6 +43,7 @@
 import com.eveningoutpost.dexdrip.stats.StatsResult;
 import com.eveningoutpost.dexdrip.utils.ActivityWithMenu;
 import com.eveningoutpost.dexdrip.utils.DatabaseUtil;
+import com.eveningoutpost.dexdrip.utils.SdcardImportExport;
 import com.eveningoutpost.dexdrip.wearintegration.WatchUpdaterService;
 import com.nispok.snackbar.Snackbar;
 import com.nispok.snackbar.SnackbarManager;
@@ -672,6 +673,11 @@ protected void onPostExecute(String filename) {
         return super.onOptionsItemSelected(item);
     }
 
+    public void settingsSDcardExport(MenuItem myitem) {
+        startActivity(new Intent(getApplicationContext(), SdcardImportExport.class));
+    }
+
+
     private class ChartViewPortListener implements ViewportChangeListener {
         @Override
         public void onViewportChanged(Viewport newViewport) {
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/utils/SdcardImportExport.java b/app/src/main/java/com/eveningoutpost/dexdrip/utils/SdcardImportExport.java
new file mode 100644
index 0000000..fa0c857
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/utils/SdcardImportExport.java
@@ -0,0 +1,159 @@
+package com.eveningoutpost.dexdrip.utils;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.view.View;
+import android.widget.Toast;
+
+import com.eveningoutpost.dexdrip.R;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+import static com.eveningoutpost.dexdrip.utils.FileUtils.getExternalDir;
+
+public class SdcardImportExport extends ActivityWithMenu {
+
+    private final static String TAG = "jamorham sdcard";
+
+    private final static String PREFERENCES_FILE = "shared_prefs/com.eveningoutpost.dexdrip_preferences.xml";
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_sdcard_import_export);
+    }
+
+    @Override
+    public String getMenuName() {
+        return "Import/Export Settings";
+    }
+
+    public void savePreferencesToSD(View myview) {
+
+        if (savePreferencesToSD()) {
+            toast("Preferences saved in sdcard '/xdrip/settingsExport' ");
+        } else {
+            toast("Couldn't write to sdcard - check permissions?");
+        }
+    }
+
+    public void loadPreferencesToSD(View myview) {
+        if (loadPreferencesFromSD()) {
+            toast("Loaded Preferences! - Restarting");
+            // shared preferences are cached so we need a hard restart
+            android.os.Process.killProcess(android.os.Process.myPid());
+        } else {
+            toast("Could not load preferences\nPlease make sure it exists in '/xdrip/settingsExport' on the sdcard");
+        }
+    }
+
+    public boolean savePreferencesToSD() {
+        if (isExternalStorageWritable()) {
+            return dataToSDcopy(PREFERENCES_FILE);
+        } else {
+            toast("SDcard not writable - cannot save");
+            return false;
+        }
+    }
+
+    public boolean loadPreferencesFromSD() {
+        if (isExternalStorageWritable()) {
+            return dataFromSDcopy(PREFERENCES_FILE);
+        } else {
+            toast("SDcard not readable");
+            return false;
+        }
+    }
+
+    private boolean isExternalStorageWritable() {
+        String state = Environment.getExternalStorageState();
+        if (Environment.MEDIA_MOUNTED.equals(state)) {
+            return true;
+        }
+        return false;
+    }
+
+    private String getCustomSDcardpath() {
+        return getExternalDir() + "/settingsExport";
+    }
+
+    private boolean dataToSDcopy(String filename) {
+        File source_file = new File(getFilesDir().getParent() + "/" + filename);
+        String path = getCustomSDcardpath();
+        File fpath = new File(path);
+        try {
+            fpath.mkdirs();
+            File dest_file = new File(path, source_file.getName());
+
+            if (directCopyFile(source_file, dest_file)) {
+                Log.i(TAG, "Copied success: " + filename);
+                return true;
+            }
+        } catch (Exception e) {
+            Log.e(TAG, "Error making directory: " + path.toString());
+            return false;
+        }
+        return false;
+    }
+
+    private boolean dataFromSDcopy(String filename) {
+        File dest_file = new File(getFilesDir().getParent() + "/" + filename);
+        File source_file = new File(getCustomSDcardpath() + "/" + dest_file.getName());
+        try {
+            dest_file.mkdirs();
+            if (directCopyFile(source_file, dest_file)) {
+                Log.i(TAG, "Copied success: " + filename);
+                return true;
+            }
+        } catch (Exception e) {
+            Log.e(TAG, "Error making directory: " + dest_file.toString());
+            return false;
+        }
+        return false;
+    }
+
+    private boolean directCopyFile(File source_filename, File dest_filename) {
+        Log.i(TAG, "Attempt to copy: " + source_filename.toString() + " to " + dest_filename.toString());
+        InputStream in = null;
+        OutputStream out = null;
+        try {
+            in = new FileInputStream(source_filename);
+            out = new FileOutputStream(dest_filename);
+            byte[] buffer = new byte[8192];
+            int read;
+            while ((read = in.read(buffer)) != -1) {
+                out.write(buffer, 0, read);
+            }
+            in.close();
+            in = null;
+            out.flush();
+            out.close();
+            out = null;
+            return true;
+        } catch (Exception e) {
+            Log.e(TAG, e.getMessage());
+        }
+        return false;
+    }
+
+    private void toast(String msg) {
+        try {
+            Toast.makeText(getApplicationContext(), msg, Toast.LENGTH_SHORT).show();
+            Log.d(TAG, "Toast msg: " + msg);
+        } catch (Exception e) {
+            Log.e(TAG, "Couldn't display toast: " + msg);
+        }
+    }
+
+    public void closeButton(View myview) {
+        finish();
+    }
+
+}
diff --git a/app/src/main/res/layout/activity_sdcard_import_export.xml b/app/src/main/res/layout/activity_sdcard_import_export.xml
new file mode 100644
index 0000000..217a80e
--- /dev/null
+++ b/app/src/main/res/layout/activity_sdcard_import_export.xml
@@ -0,0 +1,71 @@
+<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+
+    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:tools="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin"
+        tools:context="com.eveningoutpost.dexdrip.utils.SdcardImportExport">
+
+        <ScrollView
+            android:id="@+id/scrollView4"
+            android:layout_width="fill_parent"
+            android:layout_height="fill_parent">
+
+            <LinearLayout
+                android:id="@+id/linearLayout"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical">
+
+                <TextView
+                    android:id="@+id/warningtext"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentTop="true"
+                    android:layout_centerHorizontal="true"
+                    android:text="Here you can save the settings to the external storage (sdcard).\n\nOnce saved to the external storage it is potentially possible for any app to read the settings which might contain sensitive information.\n\nYou are advised to delete the settings once you have imported them again if you are concerned about this." />
+
+                <Button
+                    android:id="@+id/saveallsettings"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_alignParentStart="true"
+                    android:layout_centerVertical="true"
+                    android:layout_marginTop="28dp"
+                    android:onClick="savePreferencesToSD"
+                    android:text="Save all Settings to SDcard" />
+
+                <Button
+                    android:id="@+id/buttonload"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_alignStart="@+id/saveallsettings"
+                    android:layout_below="@+id/saveallsettings"
+                    android:layout_marginTop="28dp"
+                    android:onClick="loadPreferencesToSD"
+                    android:text="Load all Settings from SDcard" />
+
+            </LinearLayout>
+
+        </ScrollView>
+
+    </RelativeLayout>
+
+    <fragment
+        android:id="@+id/navigation_drawer"
+        android:name="com.eveningoutpost.dexdrip.NavigationDrawerFragment"
+        android:layout_width="@dimen/navigation_drawer_width"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        tools:layout="@layout/fragment_navigation_drawer" />
+
+</android.support.v4.widget.DrawerLayout>
diff --git a/app/src/main/res/menu/menu_home.xml b/app/src/main/res/menu/menu_home.xml
index 24b0d3f..cc6ab28 100644
--- a/app/src/main/res/menu/menu_home.xml
+++ b/app/src/main/res/menu/menu_home.xml
@@ -13,24 +13,40 @@
         android:title="@string/action_open_watch_setting"
         app:showAsAction="never" />
 
-    <item android:id="@+id/action_export_database"
-        android:title="@string/menu_export_database"
-        android:checkable="false"
-        android:orderInCategory="1"
-        app:showAsAction="never"/>
 
-    <item android:id="@+id/action_import_db"
-        android:title="@string/menu_import_db"
-        android:checkable="false"
-        android:orderInCategory="1"
-        app:showAsAction="never"/>
+    <item android:id="@+id/export_submenu"
+        android:title="@string/export_submenu"
+        android:orderInCategory="1">
 
-    <item android:id="@+id/action_export_csv_sidiary"
-        android:title="@string/menu_export_csv_sidiary"
-        android:checkable="false"
-        android:orderInCategory="1"
-        app:showAsAction="never"/>
+        <menu>
+            <item android:id="@+id/action_export_database"
+                android:title="@string/menu_export_database"
+                android:checkable="false"
+                android:orderInCategory="1"
+                app:showAsAction="never"/>
+
+            <item android:id="@+id/action_import_db"
+                android:title="@string/menu_import_db"
+                android:checkable="false"
+                android:orderInCategory="1"
+                app:showAsAction="never"/>
+
+            <item android:id="@+id/action_export_csv_sidiary"
+                android:title="@string/menu_export_csv_sidiary"
+                android:checkable="false"
+                android:orderInCategory="1"
+                app:showAsAction="never"/>
+
+            <item android:id="@+id/importsettings"
+                android:title="Im/Export Settings"
+                android:checkable="false"
+                android:onClick="settingsSDcardExport"
+                android:visible="true"
+                android:orderInCategory="1"
+                app:showAsAction="never"/>
+        </menu>
 
+    </item>
     <item android:id="@+id/action_toggle_speakreadings"
         android:title="@string/menu_toggle_speakreadings"
         android:checkable="true"
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index c90fd5c..713ae51 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -136,4 +136,5 @@
     <string name="action_open_watch_setting">Open Settings on Wear</string>
     <string name="prev_arrow"><![CDATA[<<]]></string>
     <string name="next_arrow"><![CDATA[>>]]></string>
+    <string name="export_submenu">Im-/Export...</string>
 </resources>

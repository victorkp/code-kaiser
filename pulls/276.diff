diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 30448bf..a028dc8 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -4,7 +4,10 @@
 
     <permission android:name="com.eveningoutpost.dexdrip.permissions.RECEIVE_BG_ESTIMATE" />
 
-    <uses-feature
+    <!-- To receive data from HAPP. -->
+    <uses-permission android:name="com.eveningoutpost.dexdrip.permissions.RECEIVE_EXTERNAL_STATUSLINE" />
+
+    <uses-featureg
         android:name="android.hardware.bluetooth_le"
         android:required="true" />
     <uses-feature android:name="android.hardware.usb.host" />
@@ -108,6 +111,11 @@
             </intent-filter>
         </receiver>
 
+        <receiver android:name=".wearintegration.ExternalStatusBroadcastReceier" android:exported="true" >
+            <intent-filter> <action android:name="com.eveningoutpost.dexdrip.ExternalStatusline" /> </intent-filter>
+        </receiver>
+
+
         <activity
             android:name=".Tables.CalibrationDataTable"
             android:label="@string/title_activity_calibration_data_table" >
@@ -124,6 +132,12 @@
             android:exported="true" >
         </service>
 
+        <service
+            android:name=".wearintegration.ExternalStatusService"
+            android:enabled="true"
+            android:exported="false" >
+        </service>
+
         <activity
             android:name=".stats.StatsActivity"
             android:label="Statistics" >
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/BgSendQueue.java b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/BgSendQueue.java
index e7c0872..11a616c 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/BgSendQueue.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/UtilityModels/BgSendQueue.java
@@ -6,28 +6,29 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.SharedPreferences;
+import android.content.pm.ResolveInfo;
 import android.os.BatteryManager;
 import android.os.Bundle;
 import android.os.PowerManager;
 import android.preference.PreferenceManager;
 import android.provider.BaseColumns;
 
-import com.eveningoutpost.dexdrip.Models.Calibration;
-import com.eveningoutpost.dexdrip.Models.UserError.Log;
-
 import com.activeandroid.Model;
 import com.activeandroid.annotation.Column;
 import com.activeandroid.annotation.Table;
 import com.activeandroid.query.Select;
 import com.eveningoutpost.dexdrip.Models.BgReading;
+import com.eveningoutpost.dexdrip.Models.Calibration;
+import com.eveningoutpost.dexdrip.Models.UserError.Log;
 import com.eveningoutpost.dexdrip.Services.SyncService;
-import com.eveningoutpost.dexdrip.ShareModels.Models.ShareUploadPayload;
-import com.eveningoutpost.dexdrip.utils.BgToSpeech;
 import com.eveningoutpost.dexdrip.ShareModels.BgUploader;
+import com.eveningoutpost.dexdrip.ShareModels.Models.ShareUploadPayload;
 import com.eveningoutpost.dexdrip.WidgetUpdateService;
+import com.eveningoutpost.dexdrip.utils.BgToSpeech;
 import com.eveningoutpost.dexdrip.wearintegration.WatchUpdaterService;
 import com.eveningoutpost.dexdrip.xDripWidget;
 
+import java.util.Collections;
 import java.util.List;
 
 /**
@@ -132,6 +133,7 @@ public static void handleNewBgReading(BgReading bgReading, String operation_type
                 powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
                         "quickFix3").acquire(15000);
             }
+            sendToBroadcastReceiverToDanaApp(context);
 
             // send to pebble
             if(prefs.getBoolean("broadcast_to_pebble", false)) {
@@ -158,6 +160,67 @@ public static void handleNewBgReading(BgReading bgReading, String operation_type
         }
     }
 
+    private static void sendToBroadcastReceiverToDanaApp(Context context) {
+
+
+        Intent intent = new Intent("danaR.action.BG_DATA");
+        List<BgReading> latest6bgReadings = BgReading.latest(6);
+        Collections.reverse(latest6bgReadings);
+
+        int sizeRecords = latest6bgReadings.size();
+        double deltaAvg30min = 0d;
+        double deltaAvg15min = 0d;
+        double avg30min = 0d;
+        double avg15min = 0d;
+
+        boolean notGood = false;
+
+        if(sizeRecords >6) {
+            for(int i = sizeRecords-6;i<sizeRecords ;i++) {
+                short glucoseValueBeeingProcessed = (short) latest6bgReadings.get(i).calculated_value;
+                if(glucoseValueBeeingProcessed < 40) {
+                    notGood = true;
+                    Log.i("sendToBroadcastReceiverToDanaApp", "sendToBroadcastReceiverToDanaApp data not good "+ latest6bgReadings.get(i).timestamp);
+                }
+                deltaAvg30min+= glucoseValueBeeingProcessed - latest6bgReadings.get(i-1).calculated_value;
+                avg30min+=glucoseValueBeeingProcessed;
+                if(i>=sizeRecords-3) {
+                    avg15min += glucoseValueBeeingProcessed;
+                    deltaAvg15min += glucoseValueBeeingProcessed - latest6bgReadings.get(i-1).calculated_value;
+                }
+            }
+            deltaAvg30min/=6d;
+            deltaAvg15min/=3d;
+            avg30min/=6d;
+            avg15min/=3d;
+        }
+
+        if(notGood) {
+            Log.i("sendToBroadcastReceiverToDanaApp","sendToBroadcastReceiverToDanaApp data not good");
+            return;
+        }
+        Bundle bundle = new Bundle();
+        BgReading timeMatechedRecordCurrent = latest6bgReadings.get(sizeRecords - 1);
+        bundle.putLong("time", timeMatechedRecordCurrent.timestamp);
+        bundle.putInt("value", (int) timeMatechedRecordCurrent.calculated_value);
+        bundle.putInt("delta", (int) (timeMatechedRecordCurrent.calculated_value - latest6bgReadings.get(sizeRecords - 2).calculated_value));
+        bundle.putDouble("deltaAvg30min", deltaAvg30min);
+        bundle.putDouble("deltaAvg15min", deltaAvg15min);
+        bundle.putDouble("avg30min", avg30min);
+        bundle.putDouble("avg15min", avg15min);
+
+        intent.putExtras(bundle);
+
+        List<ResolveInfo> x = context.getPackageManager().queryBroadcastReceivers(intent, 0);
+        Log.i("sendToBroadcastReceiverToDanaApp","sendToBroadcastReceiverToDanaApp.queryBroadcastReceivers "+x.size() +" "+x );
+
+
+        context.sendBroadcast(intent);
+    }
+
+
+
+
     public void deleteThis() {
         this.delete();
     }
@@ -172,3 +235,5 @@ public static int getBatteryLevel(Context context) {
         return (int)(((float)level / (float)scale) * 100.0f);
     }
 }
+
+
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusBroadcastReceier.java b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusBroadcastReceier.java
new file mode 100644
index 0000000..2ebea3b
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusBroadcastReceier.java
@@ -0,0 +1,24 @@
+package com.eveningoutpost.dexdrip.wearintegration;
+
+import android.content.Context;
+import android.content.Intent;
+import android.support.v4.content.WakefulBroadcastReceiver;
+
+import com.eveningoutpost.dexdrip.Models.UserError;
+
+/**
+ * Created by adrian on 14/02/16.
+ */
+public class ExternalStatusBroadcastReceier extends WakefulBroadcastReceiver {
+    @Override
+    public void onReceive(Context context, Intent intent) {
+
+        UserError.Log.e("Adrian", "onReceive");
+
+
+        startWakefulService(context, new Intent(context, ExternalStatusService.class)
+                .setAction(ExternalStatusService.ACTION_NEW_EXTERNAL_STATUSLINE)
+                .putExtras(intent));
+
+    }
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusService.java b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusService.java
new file mode 100644
index 0000000..18a2f15
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/wearintegration/ExternalStatusService.java
@@ -0,0 +1,56 @@
+package com.eveningoutpost.dexdrip.wearintegration;
+
+import android.app.IntentService;
+import android.content.Intent;
+import android.support.v4.content.WakefulBroadcastReceiver;
+
+import com.eveningoutpost.dexdrip.Home;
+import com.eveningoutpost.dexdrip.Models.UserError;
+import com.eveningoutpost.dexdrip.utils.Preferences;
+
+import java.util.Date;
+
+/**
+ * Created by adrian on 14/02/16.
+ */
+public class ExternalStatusService extends IntentService{
+    //constants
+    public static final String EXTRA_STATUSLINE = "com.eveningoutpost.dexdrip.Extras.Statusline";
+    public static final String ACTION_NEW_EXTERNAL_STATUSLINE = "com.eveningoutpost.dexdrip.ExternalStatusline";
+    public static final String RECEIVER_PERMISSION = "com.eveningoutpost.dexdrip.permissions.RECEIVE_EXTERNAL_STATUSLINE";
+
+    public ExternalStatusService() {
+        super("ExternalStatusService");
+        setIntentRedelivery(true);
+    }
+
+
+    @Override
+    protected void onHandleIntent(Intent intent) {
+
+        UserError.Log.e("Adrian", "onHandleIntent");
+
+
+        if (intent == null)
+            return;
+
+        final String action = intent.getAction();
+
+        UserError.Log.e("Adrian", "action = " + action);
+        try {
+
+            if (ACTION_NEW_EXTERNAL_STATUSLINE.equals(action)) {
+                final String statusline = intent.getStringExtra(EXTRA_STATUSLINE);
+
+                if(statusline != null) {
+                    UserError.Log.e("Adrian", "statusline = " + statusline);
+                    Intent intent1 = new Intent(this, Home.class);
+                    intent1.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                    startActivity(intent1);
+                }
+            }
+        } finally {
+            WakefulBroadcastReceiver.completeWakefulIntent(intent);
+        }
+    }
+}
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java b/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java
index 1397bca..ef0fbd4 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/BIGChart.java
@@ -341,33 +341,33 @@ public void run() {
 
 
     protected void setColorDark() {
-        mTime.setTextColor(Color.WHITE);
+        mTime.setTextColor(Color.GREEN);
         mRelativeLayout.setBackgroundColor(Color.BLACK);
         if (sgvLevel == 1) {
-            mSgv.setTextColor(Color.YELLOW);
-            mDelta.setTextColor(Color.YELLOW);
+            mSgv.setTextColor(Color.GREEN);
+            mDelta.setTextColor(Color.GREEN);
         } else if (sgvLevel == 0) {
-            mSgv.setTextColor(Color.WHITE);
-            mDelta.setTextColor(Color.WHITE);
+            mSgv.setTextColor(Color.GREEN);
+            mDelta.setTextColor(Color.GREEN);
         } else if (sgvLevel == -1) {
-            mSgv.setTextColor(Color.RED);
-            mDelta.setTextColor(Color.RED);
+            mSgv.setTextColor(Color.GREEN);
+            mDelta.setTextColor(Color.GREEN);
         }
 
 
         if (ageLevel == 1) {
-            mTimestamp.setTextColor(Color.WHITE);
+            mTimestamp.setTextColor(Color.GREEN);
         } else {
-            mTimestamp.setTextColor(Color.RED);
+            mTimestamp.setTextColor(Color.GREEN);
         }
 
         if (batteryLevel == 1) {
         } else {
         }
         if (chart != null) {
-            highColor = Color.YELLOW;
-            lowColor = Color.RED;
-            midColor = Color.WHITE;
+            highColor = Color.GREEN;
+            lowColor = Color.GREEN;
+            midColor = Color.GREEN;
             singleLine = false;
             pointSize = 2;
             setupCharts();
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java b/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java
index 408668b..3512628 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/BaseWatchFace.java
@@ -42,7 +42,7 @@
 public  abstract class BaseWatchFace extends WatchFace implements SharedPreferences.OnSharedPreferenceChangeListener {
     public final static IntentFilter INTENT_FILTER;
     public static final long[] vibratePattern = {0,400,300,400,300,400};
-    public TextView mTime, mSgv, mDirection, mTimestamp, mUploaderBattery, mDelta, mRaw;
+    public TextView mTime, mSgv, mDirection, mTimestamp, mUploaderBattery, mDelta, mRaw, mStatus;
     public RelativeLayout mRelativeLayout;
     public LinearLayout mLinearLayout;
     public long sgvLevel = 0;
@@ -69,9 +69,11 @@
     private MessageReceiver messageReceiver;
 
     protected SharedPreferences sharedPrefs;
-    private String rawString = "000 | 000 | 000";
+    // private String rawString = "000 | 000 | 000";
+    private String rawString = "";
     private String batteryString = "--";
     private String sgvString = "--";
+    private String externalStatusString = "no status";
 
     @Override
     public void onCreate() {
@@ -112,6 +114,7 @@ public void onLayoutInflated(WatchViewStub stub) {
                 mDirection = (TextView) stub.findViewById(R.id.direction);
                 mTimestamp = (TextView) stub.findViewById(R.id.timestamp);
                 mRaw = (TextView) stub.findViewById(R.id.raw);
+                mStatus = (TextView) stub.findViewById(R.id.externaltstatus);
                 mUploaderBattery = (TextView) stub.findViewById(R.id.uploader_battery);
                 mDelta = (TextView) stub.findViewById(R.id.delta);
                 mRelativeLayout = (RelativeLayout) stub.findViewById(R.id.main_layout);
@@ -240,22 +243,38 @@ public void onReceive(Context context, Intent intent) {
 
     private void showAgoRawBatt() {
 
-        if(mRaw == null || mTimestamp == null || mUploaderBattery == null){
+        if(mRaw == null || mTimestamp == null || mUploaderBattery == null|| mStatus == null){
             return;
         }
 
-        if (sharedPrefs.getBoolean("showRaw", false)||
-                (sharedPrefs.getBoolean("showRawNoise", true) && sgvString.equals("???"))
-                ) {
-            mRaw.setVisibility(View.VISIBLE);
-            mRaw.setText("R: " + rawString);
+        boolean showRaw = sharedPrefs.getBoolean("showRaw", false)
+                || (sharedPrefs.getBoolean("showRawNoise", true)
+                        && sgvString.equals("???"));
+
+        boolean showStatus = sharedPrefs.getBoolean("showExternalStatus", false);
+
+        if(showRaw || showStatus){
+            //use short forms
             mTimestamp.setText(readingAge(true));
             mUploaderBattery.setText("U: " + batteryString + "%");
         } else {
-            mRaw.setVisibility(View.GONE);
             mTimestamp.setText(readingAge(false));
             mUploaderBattery.setText("Uploader: " + batteryString + "%");
         }
+
+        if (showRaw) {
+            mRaw.setVisibility(View.VISIBLE);
+            mRaw.setText("R: " + rawString);
+        } else {
+            mRaw.setVisibility(View.GONE);
+        }
+
+        if (showStatus) {
+            mStatus.setVisibility(View.VISIBLE);
+            mStatus.setText("S: " + externalStatusString);
+        } else {
+            mStatus.setVisibility(View.GONE);
+        }
     }
 
     public void setColor() {
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java b/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java
index c2dc1c4..c3ad7a4 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/Home.java
@@ -46,6 +46,7 @@ protected void setColorDark() {
             mUploaderBattery.setTextColor(Color.RED);
         }
         mRaw.setTextColor(Color.BLACK);
+        mStatus.setTextColor(Color.BLACK);
         if (chart != null) {
             highColor = Color.YELLOW;
            lowColor = Color.RED;
@@ -89,6 +90,8 @@ protected void setColorBright() {
                 mUploaderBattery.setTextColor(Color.RED);
             }
             mRaw.setTextColor(Color.WHITE);
+            mStatus.setTextColor(Color.WHITE);
+
             mTime.setTextColor(Color.BLACK);
             if (chart != null) {
                 highColor = Utils.COLOR_ORANGE;
@@ -115,6 +118,7 @@ protected void setColorBright() {
                 mDelta.setTextColor(Color.RED);
             }
             mRaw.setTextColor(Color.BLACK);
+            mStatus.setTextColor(Color.BLACK);
             mUploaderBattery.setTextColor(Color.BLACK);
             mTimestamp.setTextColor(Color.BLACK);
 
diff --git a/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java b/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java
index dd0a3b3..8aea5d8 100644
--- a/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java
+++ b/wear/src/main/java/com/eveningoutpost/dexdrip/LargeHome.java
@@ -47,6 +47,8 @@ protected void setColorDark(){
         }
 
         mRaw.setTextColor(Color.BLACK);
+        mStatus.setTextColor(Color.BLACK);
+
     }
 
 
@@ -82,6 +84,7 @@ protected void setColorBright() {
                 mUploaderBattery.setTextColor(Color.RED);
             }
             mRaw.setTextColor(Color.WHITE);
+            mStatus.setTextColor(Color.WHITE);
             mTime.setTextColor(Color.BLACK);
         } else {
             mRelativeLayout.setBackgroundColor(Color.BLACK);
@@ -103,6 +106,7 @@ protected void setColorBright() {
             mUploaderBattery.setTextColor(Color.BLACK);
             mTimestamp.setTextColor(Color.BLACK);
             mRaw.setTextColor(Color.BLACK);
+            mStatus.setTextColor(Color.BLACK);
             mTime.setTextColor(Color.WHITE);
         }
     }
diff --git a/wear/src/main/res/layout/rect_activity_home.xml b/wear/src/main/res/layout/rect_activity_home.xml
index 445802c..344321f 100644
--- a/wear/src/main/res/layout/rect_activity_home.xml
+++ b/wear/src/main/res/layout/rect_activity_home.xml
@@ -113,7 +113,16 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="10sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="10sp"
+                    android:text="S: no status"
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
diff --git a/wear/src/main/res/layout/rect_activity_home_large.xml b/wear/src/main/res/layout/rect_activity_home_large.xml
index 26cc0f5..20cc6ee 100644
--- a/wear/src/main/res/layout/rect_activity_home_large.xml
+++ b/wear/src/main/res/layout/rect_activity_home_large.xml
@@ -101,12 +101,22 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="12sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
                     android:paddingLeft="10sp"
                     android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="12sp"
+                    android:text="S: no status"
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+
 
             </LinearLayout>
 
diff --git a/wear/src/main/res/layout/round_activity_home.xml b/wear/src/main/res/layout/round_activity_home.xml
index ab7c98f..231a091 100644
--- a/wear/src/main/res/layout/round_activity_home.xml
+++ b/wear/src/main/res/layout/round_activity_home.xml
@@ -109,7 +109,16 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="8sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="8sp"
+                    android:text="S: no status"
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
diff --git a/wear/src/main/res/layout/round_activity_home_large.xml b/wear/src/main/res/layout/round_activity_home_large.xml
index 085b616..6217af3 100644
--- a/wear/src/main/res/layout/round_activity_home_large.xml
+++ b/wear/src/main/res/layout/round_activity_home_large.xml
@@ -101,7 +101,16 @@
                 <TextView
                     android:id="@+id/raw"
                     android:textSize="12sp"
-                    android:text="000 | 000 | 000"
+                    android:text=""
+                    android:layout_width="wrap_content"
+                    android:textAlignment="center"
+                    android:textColor="#000000"
+                    android:paddingLeft="10sp"
+                    android:layout_height="wrap_content" />
+                <TextView
+                    android:id="@+id/externaltstatus"
+                    android:textSize="12sp"
+                    android:text="S: no status"
                     android:layout_width="wrap_content"
                     android:textAlignment="center"
                     android:textColor="#000000"
diff --git a/wear/src/main/res/xml/preferences.xml b/wear/src/main/res/xml/preferences.xml
index a23b639..6e5bdeb 100644
--- a/wear/src/main/res/xml/preferences.xml
+++ b/wear/src/main/res/xml/preferences.xml
@@ -22,6 +22,11 @@
             android:key="showRawNoise" />
          -->
 
+        <CheckBoxPreference android:title="Show External Status"
+            android:defaultValue="false"
+            android:summary="Show External Staus (HAPP e.g.)."
+            android:key="showExternalStatus" />
+
         <ListPreference
             android:key="chart_timeframe"
             android:title="Chart Timeframe"

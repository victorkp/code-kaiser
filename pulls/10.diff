diff --git a/app/app.iml b/app/app.iml
index 1c84ce6..97fbbbc 100644
--- a/app/app.iml
+++ b/app/app.iml
@@ -93,9 +93,9 @@
     <orderEntry type="library" exported="" name="usb-serial-for-android-v010" level="project" />
     <orderEntry type="library" exported="" name="okhttp-2.2.0" level="project" />
     <orderEntry type="library" exported="" name="pebblekit-2.6.0" level="project" />
-    <orderEntry type="library" exported="" name="acra-4.5.0" level="project" />
     <orderEntry type="library" exported="" name="retrofit-1.9.0" level="project" />
     <orderEntry type="library" exported="" name="rxjava-1.0.0" level="project" />
+    <orderEntry type="library" exported="" name="acra-4.5.0" level="project" />
     <orderEntry type="library" exported="" name="hellocharts-library-1.1" level="project" />
   </component>
 </module>
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java b/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java
index f304791..4324043 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java
@@ -211,11 +211,22 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
         @Override
         public void onServicesDiscovered(BluetoothGatt gatt, int status) {
             if (status == BluetoothGatt.GATT_SUCCESS) {
-                for (BluetoothGattService gattService : mBluetoothGatt.getServices()) {
-                    Log.w(TAG, "Service Found");
-                    for (BluetoothGattCharacteristic gattCharacteristic : gattService.getCharacteristics()) {
-                        setCharacteristicNotification(gattCharacteristic, true);
+                BluetoothGattService gattService = mBluetoothGatt.getService(xDripDataService);
+                if (gattService != null) {
+                    BluetoothGattCharacteristic gattCharacteristic = gattService.getCharacteristic(xDripDataCharacteristic);
+                    if (gattCharacteristic != null ) {
+                        final int charaProp = gattCharacteristic.getProperties();
+
+                        if ((charaProp | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {
+                            mBluetoothGatt.setCharacteristicNotification(gattCharacteristic, true);
+                        } else {
+                            Log.e(TAG, "characteristic " + gattCharacteristic.getUuid() + " doesn't have notify properties");
+                        }
+                    } else {
+                        Log.e(TAG, "characteristic " + xDripDataCharacteristic + " not found");
                     }
+                } else {
+                    Log.e(TAG, "service " + xDripDataCharacteristic + " not found");
                 }
             }
         }
@@ -264,19 +275,6 @@ public void close() {
         setRetryTimer();
         mBluetoothGatt = null;
         mConnectionState = STATE_DISCONNECTED;
-        Log.w(TAG, "bt Disconnected");
-    }
-
-    public void setCharacteristicNotification(BluetoothGattCharacteristic characteristic, boolean enabled) {
-        if (mBluetoothAdapter == null || mBluetoothGatt == null) { return; }
-        mBluetoothGatt.setCharacteristicNotification(characteristic, enabled);
-        if (xDripDataCharacteristic.equals(characteristic.getUuid())) {
-            Log.w(TAG, "UUID MATCH FOUND!!! " + characteristic.getUuid());
-            BluetoothGattDescriptor descriptor = characteristic.getDescriptor(
-                    UUID.fromString(HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG));
-            descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);
-            mBluetoothGatt.writeDescriptor(descriptor);
-        }
     }
 
     public void setSerialDataToTransmitterRawData(byte[] buffer, int len) {

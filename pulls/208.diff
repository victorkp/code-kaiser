diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataProvider.java b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataProvider.java
new file mode 100644
index 0000000..5e61030
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataProvider.java
@@ -0,0 +1,42 @@
+package com.eveningoutpost.dexdrip.DataPlugins;
+
+/**
+ * Created by adrian on 09/12/15.
+ */
+public interface DataProvider{
+
+    //TODO: write proper JavaDoc ;)
+
+    /*
+    * Register a DataReceiver that will receive callbacks when new data is available.
+    * The registration of the first DataReceiver may start background services or tasks for data retrieval.
+    * */
+    public void registerDataReceiver(DataReceiver dataReceiver);
+
+
+    /*
+    * Like registerDataReceiver(DataReceiver dataReceiver) but only expects callbacks for a certain type.
+    * This might save load as the DataProvider only has to retrieve data for types that are registered for
+    * **/
+    public void registerDataReceiver(DataReceiver dataReceiver, String type);
+
+
+    /*
+    * Register for several types of data.
+    * */
+    public void registerDataReceiver(DataReceiver dataReceiver, String[] types);
+
+
+    /*
+      Will deregister a DataReceiver.
+    * In case the count of registered receivers reaches 0, all data retrieval services or tasks
+    * that may have been started will get stopped.
+    * */
+    public void deregisterDataReceiver(DataReceiver dataReceiver);
+
+    /*
+    * Will deregister all DataReceivers.
+    * In case a Service or Background task is started it will be stopped.
+    * */
+    public void tearDown();
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiver.java b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiver.java
new file mode 100644
index 0000000..1f51dc1
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiver.java
@@ -0,0 +1,12 @@
+package com.eveningoutpost.dexdrip.DataPlugins;
+
+import android.os.Bundle;
+
+/**
+ * Created by adrian on 09/12/15.
+ */
+public interface DataReceiver {
+
+    public void onNewDataReceived(String type, Bundle data);
+
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiverProposal2.java b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiverProposal2.java
new file mode 100644
index 0000000..4e0efee
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiverProposal2.java
@@ -0,0 +1,14 @@
+package com.eveningoutpost.dexdrip.DataPlugins;
+
+import android.os.Bundle;
+
+/**
+ * Created by adrian on 09/12/15.
+ */
+public interface DataReceiverProposal2 {
+
+    public void onNewBgData(Bundle data);
+    public void onNewCalData(Bundle data);
+    public void onNewMeterReading(Bundle data);
+
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiverProposal3.java b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiverProposal3.java
new file mode 100644
index 0000000..b185194
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/DataPlugins/DataReceiverProposal3.java
@@ -0,0 +1,16 @@
+package com.eveningoutpost.dexdrip.DataPlugins;
+
+import android.support.annotation.Nullable;
+
+/**
+ * Created by adrian on 09/12/15.
+ */
+public interface DataReceiverProposal3 {
+
+    public void onNewCalData(long timestamp, double slope, double intercept, @Nullable Double scale, @Nullable Double raw_filtered, @Nullable Double raw_unfiltered);
+    public void onNewMeterReading(long timestamp); //add more parameters
+    public void onNewBgData(long timestamp); //add more parameters
+
+    //Add more functions. Every new Datatype the Library can handle would need a new function-stub
+
+}

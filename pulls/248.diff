diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/CalibrationGraph.java b/app/src/main/java/com/eveningoutpost/dexdrip/CalibrationGraph.java
index a2bd8b4..825ab51 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/CalibrationGraph.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/CalibrationGraph.java
@@ -1,6 +1,8 @@
 package com.eveningoutpost.dexdrip;
 
+import android.graphics.Color;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.widget.TextView;
 
 import com.eveningoutpost.dexdrip.Models.Calibration;
@@ -22,7 +24,7 @@
 
 public class CalibrationGraph extends ActivityWithMenu {
     public static String menu_name = "Calibration Graph";
-   private LineChartView chart;
+    private LineChartView chart;
     private LineChartData data;
     public double  start_x = 50;
     public double  end_x = 300;
@@ -49,46 +51,43 @@ protected void onResume(){
 
     public void setupCharts() {
         chart = (LineChartView) findViewById(R.id.chart);
-        List<Calibration> calibrations = Calibration.allForSensor();
-        List<PointValue> values = new ArrayList<PointValue>();
-        for (Calibration calibration : calibrations) {
-            PointValue point = new PointValue((float)calibration.estimate_raw_at_time_of_calibration, (float)calibration.bg);
-            String time = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT).format(new Date((long)calibration.raw_timestamp));
-            point.setLabel(time.toCharArray());
-            values.add(point);
-        }
-
-        Line line = new Line(values);
-        line.setColor(ChartUtils.COLOR_BLUE);
-        line.setHasLines(false);
-        line.setPointRadius(4);
-        line.setHasPoints(true);
-        line.setHasLabels(true);
+        List<Line> lines = new ArrayList<Line>();
 
         Calibration calibration = Calibration.last();
-        List<PointValue> lineValues = new ArrayList<PointValue>();
         if(calibration != null) {
-            lineValues.add(new PointValue((float) start_x, (float) (start_x * calibration.slope + calibration.intercept)));
-            lineValues.add(new PointValue((float) end_x, (float) (end_x * calibration.slope + calibration.intercept)));
-
+            //set header
             DecimalFormat df = new DecimalFormat("#");
             df.setMaximumFractionDigits(2);
             df.setMinimumFractionDigits(2);
             String Header = "slope = " + df.format(calibration.slope) + " intercept = " + df.format(calibration.intercept);
             GraphHeader.setText(Header);
+
+            //red line
+            List<PointValue> lineValues = new ArrayList<PointValue>();
+            lineValues.add(new PointValue((float) start_x, (float) (start_x * calibration.slope + calibration.intercept)));
+            lineValues.add(new PointValue((float) end_x, (float) (end_x * calibration.slope + calibration.intercept)));
+            Line calibrationLine = new Line(lineValues);
+            calibrationLine.setColor(ChartUtils.COLOR_RED);
+            calibrationLine.setHasLines(true);
+            calibrationLine.setHasPoints(false);
+
+            //calibration values
+            List<Calibration> calibrations = Calibration.allForSensor();
+            Line greyLine = getCalibrationsLine(calibrations, Color.parseColor("#66FFFFFF"));
+            calibrations = Calibration.allForSensorInLastFourDays();
+            Line blueLine = getCalibrationsLine(calibrations, ChartUtils.COLOR_BLUE);
+
+            //add lines in order
+            lines.add(greyLine);
+            lines.add(blueLine);
+            lines.add(calibrationLine);
+
         }
-        Line calibrationLine = new Line(lineValues);
-        calibrationLine.setColor(ChartUtils.COLOR_RED);
-        calibrationLine.setHasLines(true);
-        calibrationLine.setHasPoints(false);
         Axis axisX = new Axis();
         Axis axisY = new Axis().setHasLines(true);
         axisX.setName("Raw Value");
         axisY.setName("BG");
 
-         List<Line> lines = new ArrayList<Line>();
-        lines.add(line);
-        lines.add(calibrationLine);
 
         data = new LineChartData(lines);
         data.setAxisXBottom(axisX);
@@ -96,4 +95,23 @@ public void setupCharts() {
         chart.setLineChartData(data);
 
     }
+
+    @NonNull
+    public Line getCalibrationsLine(List<Calibration> calibrations, int color) {
+        List<PointValue> values = new ArrayList<PointValue>();
+        for (Calibration calibration : calibrations) {
+            PointValue point = new PointValue((float)calibration.estimate_raw_at_time_of_calibration, (float)calibration.bg);
+            String time = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT).format(new Date((long)calibration.raw_timestamp));
+            point.setLabel(time.toCharArray());
+            values.add(point);
+        }
+
+        Line line = new Line(values);
+        line.setColor(color);
+        line.setHasLines(false);
+        line.setPointRadius(4);
+        line.setHasPoints(true);
+        line.setHasLabels(true);
+        return line;
+    }
 }

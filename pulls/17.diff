diff --git a/app/build.gradle b/app/build.gradle
index 9cf85fd..a42fdc1 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -33,6 +33,7 @@ android {
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     testCompile 'com.squareup.okhttp:mockwebserver:2.2.0'
+    compile 'com.nispok:snackbar:2.10.8'
     compile 'com.android.support:appcompat-v7:22.1.1'
     compile 'com.squareup.okhttp:okhttp:2.2.0'
     compile 'com.google.code.gson:gson:2.3'
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
index e7bc18b..6953428 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Home.java
@@ -2,6 +2,7 @@
 
 import android.app.Activity;
 import android.app.NotificationManager;
+import android.app.PendingIntent;
 import android.app.Service;
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -33,14 +34,16 @@
 import com.eveningoutpost.dexdrip.UtilityModels.Intents;
 import com.eveningoutpost.dexdrip.UtilityModels.Notifications;
 import com.eveningoutpost.dexdrip.utils.DatabaseUtil;
-import com.eveningoutpost.dexdrip.utils.ShareNotification;
-
 
 import java.io.File;
 import java.text.DecimalFormat;
 import java.util.Date;
 import java.util.List;
 
+import com.nispok.snackbar.Snackbar;
+import com.nispok.snackbar.SnackbarManager;
+import com.nispok.snackbar.enums.SnackbarType;
+import com.nispok.snackbar.listeners.ActionClickListener;
 import lecho.lib.hellocharts.ViewportChangeListener;
 import lecho.lib.hellocharts.gesture.ZoomType;
 import lecho.lib.hellocharts.model.Viewport;
@@ -350,6 +353,22 @@ public boolean onCreateOptionsMenu(Menu menu) {
         return super.onCreateOptionsMenu(menu);
     }
 
+    class SnackbarUriListener implements ActionClickListener {
+        Uri uri;
+        SnackbarUriListener(Uri uri) {
+            this.uri = uri;
+        }
+
+        @Override
+        public void onActionClicked(Snackbar snackbar) {
+            Intent shareIntent = new Intent();
+            shareIntent.setAction(Intent.ACTION_SEND);
+            shareIntent.putExtra(Intent.EXTRA_STREAM, uri);
+            shareIntent.setType("application/octet-stream");
+            startActivity(Intent.createChooser(shareIntent, "Share database..."));
+        }
+    }
+
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         if (item.getItemId() == R.id.action_export_database) {
@@ -362,20 +381,14 @@ protected String doInBackground(Void... params) {
                 @Override
                 protected void onPostExecute(String filename) {
                     super.onPostExecute(filename);
-
-                    final Context ctx = getApplicationContext();
-
-                    Toast.makeText(ctx, "Export stored at " + filename, Toast.LENGTH_SHORT).show();
-
-                    final NotificationCompat.Builder n = new NotificationCompat.Builder(ctx);
-                    n.setContentTitle("Export complete");
-                    n.setContentText("Ready to be sent.");
-                    n.setAutoCancel(true);
-                    n.setSmallIcon(R.drawable.ic_action_communication_invert_colors_on);
-                    ShareNotification.viewOrShare("application/octet-stream", Uri.fromFile(new File(filename)), n, ctx);
-
-                    final NotificationManager manager = (NotificationManager) ctx.getSystemService(Service.NOTIFICATION_SERVICE);
-                    manager.notify(Notifications.exportCompleteNotificationId, n.build());
+                    SnackbarManager.show(
+                            Snackbar.with(Home.this)
+                                    .type(SnackbarType.MULTI_LINE)
+                                    .duration(4000)
+                                    .text("Exported to " + filename) // text to display
+                                    .actionLabel("Share") // action button label
+                                    .actionListener(new SnackbarUriListener(Uri.fromFile(new File(filename)))),
+                            Home.this);
                 }
             }.execute();
 
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java b/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java
index cfe1b4a..5d42ba8 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Services/DexCollectionService.java
@@ -309,7 +309,7 @@ public void setSerialDataToTransmitterRawData(byte[] buffer, int len) {
                         sensor.latest_battery_level = transmitterData.sensor_battery_level;
                         sensor.save();
 
-                        BgReading.create(transmitterData.raw_data, this, timestamp);
+                        BgReading.create(transmitterData.raw_data, transmitterData.raw_data, this, timestamp);
                     } else {
                         Log.w(TAG, "No Active Sensor, Data only stored in Transmitter Data");
                     }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/utils/ShareNotification.java b/app/src/main/java/com/eveningoutpost/dexdrip/utils/ShareNotification.java
deleted file mode 100644
index 17df3d8..0000000
--- a/app/src/main/java/com/eveningoutpost/dexdrip/utils/ShareNotification.java
+++ /dev/null
@@ -1,51 +0,0 @@
-package com.eveningoutpost.dexdrip.utils;
-
-import android.annotation.TargetApi;
-import android.app.Notification;
-import android.app.PendingIntent;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.net.Uri;
-import android.os.Build;
-import android.support.v4.app.NotificationCompat;
-
-/**
- * Helper class to show a share notificaiton.
- */
-public class ShareNotification {
-
-    public static void viewOrShare(String mime, Uri uri, NotificationCompat.Builder builder, Context context) {
-        final Intent viewFileIntent = new Intent(Intent.ACTION_VIEW);
-        viewFileIntent.setDataAndType(uri, mime);
-
-        ResolveInfo matches = context.getPackageManager().resolveActivity(viewFileIntent, PackageManager.MATCH_DEFAULT_ONLY);
-
-        if (matches != null) {
-            final PendingIntent resultPendingIntent = PendingIntent.getActivity(context, 0, viewFileIntent, PendingIntent.FLAG_UPDATE_CURRENT);
-            builder.setContentIntent(resultPendingIntent);
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
-                addShare(builder, mime, uri, context);
-            }
-        } else {
-            final Intent shareIntent = new Intent();
-            shareIntent.setAction(Intent.ACTION_SEND);
-            shareIntent.putExtra(Intent.EXTRA_STREAM, uri);
-            shareIntent.setType(mime);
-            final PendingIntent sharePendingIntent = PendingIntent.getActivity(context, 0, shareIntent, PendingIntent.FLAG_UPDATE_CURRENT);
-
-            builder.setContentIntent(sharePendingIntent);
-        }
-    }
-
-    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
-    private static void addShare(NotificationCompat.Builder notification, String mime, Uri uri, Context context) {
-        final Intent shareIntent = new Intent();
-        shareIntent.setAction(Intent.ACTION_SEND);
-        shareIntent.putExtra(Intent.EXTRA_STREAM, uri);
-        shareIntent.setType(mime);
-        final PendingIntent sharePendingIntent = PendingIntent.getActivity(context, 0, shareIntent, PendingIntent.FLAG_UPDATE_CURRENT);
-        notification.addAction(android.R.drawable.ic_menu_share, "Share", sharePendingIntent);
-    }
-}

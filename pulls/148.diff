diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 2314a24..560a578 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -32,7 +32,7 @@
             android:value="DexDrip.db" />
         <meta-data
             android:name="AA_DB_VERSION"
-            android:value="35" />
+            android:value="36" />
 
         <provider
             android:name="com.activeandroid.content.ContentProvider"
@@ -81,6 +81,10 @@
             android:label="@string/title_activity_start_new_sensor" >
         </activity>
         <activity
+            android:name=".NewSensorLocation"
+            android:label="@string/title_activity_new_sensor_location" >
+        </activity>
+        <activity
             android:name=".StopSensor"
             android:label="@string/title_activity_stop_sensor" >
         </activity>
diff --git a/app/src/main/assets/migrations/36.sql b/app/src/main/assets/migrations/36.sql
new file mode 100644
index 0000000..36b8ef0
--- /dev/null
+++ b/app/src/main/assets/migrations/36.sql
@@ -0,0 +1 @@
+ALTER TABLE Sensors ADD COLUMN sensor_location TEXT;
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/NewSensorLocation.java b/app/src/main/java/com/eveningoutpost/dexdrip/NewSensorLocation.java
new file mode 100644
index 0000000..f65acb7
--- /dev/null
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/NewSensorLocation.java
@@ -0,0 +1,162 @@
+package com.eveningoutpost.dexdrip;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.preference.PreferenceManager;
+import android.support.v4.widget.DrawerLayout;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.DatePicker;
+import android.widget.EditText;
+import android.widget.LinearLayout;
+import android.widget.RadioButton;
+import android.widget.RadioGroup;
+import android.widget.RadioGroup.OnCheckedChangeListener;
+import android.widget.TimePicker;
+import android.widget.Toast;
+
+import com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter;
+import com.eveningoutpost.dexdrip.utils.ActivityWithMenu;
+
+import java.util.Calendar;
+import java.util.LinkedList;
+import java.util.List;
+
+class Location {
+    Location(String location, int location_id) {
+        this.location = location;
+        this.location_id = location_id;
+    }
+    public String location;
+    public int location_id;
+}
+
+
+public class NewSensorLocation extends ActivityWithMenu {
+    public static String menu_name = "New sensor location";
+    private Button button;
+    private Button buttonCancel;
+    private RadioGroup radioGroup;
+    private EditText sensor_location_other;
+    CheckBox DontAskAgain;
+    List<Location> locations;
+    
+    final int PRIVATE_ID = 200;
+    final int OTHER_ID = 201;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_new_sensor_location);
+        button = (Button)findViewById(R.id.saveSensorLocation);
+        buttonCancel = (Button)findViewById(R.id.saveSensorLocationCancel);
+        sensor_location_other = (EditText) findViewById(R.id.edit_sensor_location);
+        sensor_location_other.setEnabled(false);
+        DontAskAgain = (CheckBox)findViewById(R.id.sensorLocationDontAskAgain);
+        radioGroup = (RadioGroup) findViewById(R.id.myRadioGroup);
+        addListenerOnButton();
+        
+        locations = new LinkedList<Location>();
+        
+        locations.add(new Location("I dont wish to share", PRIVATE_ID));
+        locations.add(new Location("Upper arm", 1));
+        locations.add(new Location("Thigh", 2));
+        locations.add(new Location("Belly (abdomen)", 3));
+        locations.add(new Location("Lower back", 4));
+        locations.add(new Location("buttocks", 5));
+        locations.add(new Location("other", OTHER_ID));
+        
+        for(Location location : locations) {
+            AddButton(location.location, location.location_id);
+        }
+        radioGroup.check(PRIVATE_ID);
+        
+    }
+
+    
+    private void AddButton(String text, int id) {
+        RadioButton newRadioButton = new RadioButton(this);
+        newRadioButton.setText(text);
+        newRadioButton.setId(id);
+        LinearLayout.LayoutParams layoutParams = new RadioGroup.LayoutParams(
+                RadioGroup.LayoutParams.WRAP_CONTENT,
+                RadioGroup.LayoutParams.WRAP_CONTENT);
+        radioGroup.addView(newRadioButton);
+
+    }
+    
+    @Override
+    public String getMenuName() {
+        return menu_name;
+    }
+
+    public void addListenerOnButton() {
+
+        button.setOnClickListener(new View.OnClickListener() {
+            public void onClick(View v) {
+
+              
+                int selectedId = radioGroup.getCheckedRadioButtonId();
+                String location = new String();
+                
+                if (selectedId == OTHER_ID) {
+                    location = sensor_location_other.getText().toString();;
+                } else {
+                    for(Location it : locations) {
+                        if(selectedId == it.location_id) {
+                            location = it.location;
+                            break;
+                        }
+                    }
+                }
+                Toast.makeText(getApplicationContext(), "Sensor locaton is " + location, Toast.LENGTH_LONG).show();
+                  
+                  
+                Log.w("NEW SENSOR", "Sensor location is " + location);
+                Sensor.updateSensorLocation(location);
+                  
+                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+                  
+                prefs.edit().putBoolean("store_sensor_location", !DontAskAgain.isChecked()).apply();
+                
+                Intent intent = new Intent(getApplicationContext(), Home.class);
+                startActivity(intent);
+                finish();
+            }
+        });
+        
+        buttonCancel.setOnClickListener(new View.OnClickListener() {
+            public void onClick(View v) {
+
+                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+                
+                prefs.edit().putBoolean("store_sensor_location", !DontAskAgain.isChecked()).apply();
+
+                Intent intent = new Intent(getApplicationContext(), Home.class);
+                startActivity(intent);
+                finish();
+            }
+        });        
+        
+        radioGroup.setOnCheckedChangeListener(new OnCheckedChangeListener() {
+
+            @Override
+            public void onCheckedChanged(RadioGroup group, int checkedId) {
+                if(checkedId == OTHER_ID) {
+                    sensor_location_other.setEnabled(true);
+                    sensor_location_other.requestFocus();
+                } else {
+                    sensor_location_other.setEnabled(false);
+                }
+            }
+        });
+        
+        
+    }
+}
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/Sensor.java b/app/src/main/java/com/eveningoutpost/dexdrip/Sensor.java
index a92fc01..48f383d 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/Sensor.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/Sensor.java
@@ -1,6 +1,7 @@
 package com.eveningoutpost.dexdrip;
 
 import android.provider.BaseColumns;
+import android.preference.ListPreference;
 import android.util.Log;
 
 import com.activeandroid.Model;
@@ -34,11 +35,16 @@
 //    @Expose
     @Column(name = "uuid", index = true)
     public String uuid;
+    
+//  @Expose
+  @Column(name = "sensor_location")
+  public String sensor_location;
 
     public static Sensor create(long started_at) {
         Sensor sensor = new Sensor();
         sensor.started_at = started_at;
         sensor.uuid = UUID.randomUUID().toString();
+
         sensor.save();
         SensorSendQueue.addToQueue(sensor);
         Log.w("SENSOR MODEL:", sensor.toString());
@@ -70,5 +76,14 @@ public static boolean isActive() {
             return true;
         }
     }
+    
+    public static void updateSensorLocation(String sensor_location) {
+        Sensor sensor = currentSensor();
+        if (sensor == null) {
+            Log.e("SENSOR MODEL:", "updateSensorLocation called but sensor is null");
+            return;
+        }
+        sensor.sensor_location = sensor_location;
+    }
 }
 
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/StartNewSensor.java b/app/src/main/java/com/eveningoutpost/dexdrip/StartNewSensor.java
index 8cbd8a5..5664d6a 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/StartNewSensor.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/StartNewSensor.java
@@ -2,7 +2,9 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.preference.PreferenceManager;
 import android.support.v4.widget.DrawerLayout;
 import android.util.Log;
 import android.view.Menu;
@@ -22,9 +24,9 @@
 
 public class StartNewSensor extends ActivityWithMenu {
     public static String menu_name = "Start Sensor";
-    public Button button;
-    public DatePicker dp;
-    public TimePicker tp;
+    private Button button;
+    private DatePicker dp;
+    private TimePicker tp;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -59,16 +61,24 @@ public void onClick(View v) {
               tp.getCurrentHour(), tp.getCurrentMinute(), 0);
               long startTime = calendar.getTime().getTime();
 
-              Sensor sensor = Sensor.create(startTime);
+              Sensor.create(startTime);
               Log.w("NEW SENSOR", "Sensor started at " + startTime);
 
               Toast.makeText(getApplicationContext(), "NEW SENSOR STARTED", Toast.LENGTH_LONG).show();
-              Intent intent = new Intent(getApplicationContext(), Home.class);
               CollectionServiceStarter.newStart(getApplicationContext());
+              SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+              Intent intent;
+              if(prefs.getBoolean("store_sensor_location",true)) {
+                  intent = new Intent(getApplicationContext(), NewSensorLocation.class);
+              } else {
+                  intent = new Intent(getApplicationContext(), Home.class);
+              }
+              
               startActivity(intent);
               finish();
           }
 
         });
+        
     }
 }
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/StopSensor.java b/app/src/main/java/com/eveningoutpost/dexdrip/StopSensor.java
index 457ded3..14b84ec 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/StopSensor.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/StopSensor.java
@@ -44,9 +44,11 @@ public void addListenerOnButton() {
         button.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
                 Sensor sensor = Sensor.currentSensor();
-                sensor.stopped_at = new Date().getTime();
-                Log.w("NEW SENSOR", "Sensor stopped at " + sensor.stopped_at);
-                sensor.save();
+                if(sensor != null) {
+                    sensor.stopped_at = new Date().getTime();
+                    Log.w("NEW SENSOR", "Sensor stopped at " + sensor.stopped_at);
+                    sensor.save();
+                }
                 AlertPlayer.getPlayer().stopAlert(getApplicationContext(),true, false);
 
                 Toast.makeText(getApplicationContext(), "Sensor stopped", Toast.LENGTH_LONG).show();
diff --git a/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java b/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java
index c03d3dc..c0bbb9f 100644
--- a/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java
+++ b/app/src/main/java/com/eveningoutpost/dexdrip/utils/Preferences.java
@@ -262,6 +262,8 @@ public void onCreate(Bundle savedInstanceState) {
             bindPreferenceSummaryToValue(findPreference("cloud_storage_api_base"));
 
             addPreferencesFromResource(R.xml.pref_advanced_settings);
+            addPreferencesFromResource(R.xml.pref_community_help);
+
             bindTTSListener();
             final Preference collectionMethod = findPreference("dex_collection_method");
             final Preference runInForeground = findPreference("run_service_in_foreground");
diff --git a/app/src/main/res/layout/activity_new_sensor_location.xml b/app/src/main/res/layout/activity_new_sensor_location.xml
new file mode 100644
index 0000000..8413077
--- /dev/null
+++ b/app/src/main/res/layout/activity_new_sensor_location.xml
@@ -0,0 +1,100 @@
+<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools" android:id="@+id/drawer_layout"
+    android:layout_width="match_parent" android:layout_height="match_parent"
+    tools:context="com.eveningoutpost.dexdrip.Home">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:gravity="center_horizontal">
+        <ScrollView
+            android:layout_width="fill_parent"
+            android:layout_height="fill_parent"
+            android:id="@+id/scrollView4" >
+            <LinearLayout
+                android:orientation="vertical"
+                android:layout_width="fill_parent"
+                android:layout_height="fill_parent"
+                android:gravity="center_horizontal">
+
+
+
+                    <TextView
+                        android:id="@+id/sensor_location_text"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:gravity="left"
+                        android:text="In the future xDrip would like to send anonymous sensor data to the developers to improve the calibration algorithm... If you decide to opt-in, you will be asked to confirm before each data transfer. Data will never be sent without your permission. To help us understand and fine tune the calibration we would like to know where this sensor has been placed. Press the back button to cancel."
+                        android:textSize="15sp"/>
+
+
+
+                    <RadioGroup 
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_below="@+id/textView"
+                        android:id="@+id/myRadioGroup"
+                         >
+
+
+                    </RadioGroup>
+
+                    <EditText
+                        android:id="@+id/edit_sensor_location"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:inputType="text"
+                        android:ems="10"
+                        android:autoText="false"
+                        android:text=""
+                        android:singleLine="true"
+                        android:textAlignment="center"
+                        android:textSize="15sp"
+                        android:layout_alignParentStart="true" />
+                    
+                    <CheckBox
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/pref_sensor_location_dont_ask_again"
+                    android:id="@+id/sensorLocationDontAskAgain"
+                    android:checked="false" />
+                
+
+                <LinearLayout
+                    android:orientation="horizontal"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content">
+                    
+                <Button
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Save sensor location"
+                    android:id="@+id/saveSensorLocation"
+                    android:layout_alignParentBottom="true"
+                    android:layout_centerHorizontal="true"
+                    android:layout_marginTop="15dp" />
+                
+                <Button
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="cancel"
+                    android:id="@+id/saveSensorLocationCancel"
+                    android:layout_alignParentBottom="true"
+                    android:layout_centerHorizontal="true"
+                    android:layout_marginTop="15dp" />
+                
+                </LinearLayout>
+            </LinearLayout>
+        </ScrollView>
+
+    </LinearLayout>
+
+    <fragment android:id="@+id/navigation_drawer"
+        android:layout_width="@dimen/navigation_drawer_width" android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:name="com.eveningoutpost.dexdrip.NavigationDrawerFragment"
+        tools:layout="@layout/fragment_navigation_drawer" />
+
+</android.support.v4.widget.DrawerLayout>
+
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 5f0c1ea..8b3d679 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -22,6 +22,7 @@
     <string name="title_activity_calculated_data_table">CalculatedDataTable</string>
     <string name="title_activity_add_calibration">AddCalibration</string>
     <string name="title_activity_start_new_sensor">StartNewSensor</string>
+    <string name="title_activity_new_sensor_location">NewSensorLocation</string>
     <string name="title_activity_stop_sensor">StopSensor</string>
     <string name="title_activity_nav_drawer">NavDrawer</string>
     <string name="title_section1">Home</string>
@@ -42,6 +43,7 @@
     <string name="ok">OK</string>
     <string name="cancel">Cancel</string>
     <string name="no">No</string>
+    <string name="pref_sensor_location_dont_ask_again"> Don\'t ask me that again</string>
 
     <string-array name="menu_options">
         <item>Dex Drip</item>
diff --git a/app/src/main/res/xml/pref_community_help.xml b/app/src/main/res/xml/pref_community_help.xml
new file mode 100644
index 0000000..4e4772a
--- /dev/null
+++ b/app/src/main/res/xml/pref_community_help.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+    <PreferenceCategory
+        android:key="community_help_category"
+        android:title="Help the community">
+        <CheckBoxPreference
+            android:key="store_sensor_location"
+            android:title="Store sensor locaton to help algorithm improvment"
+            android:summary="Help the developers improve the xDrip algorithm."
+            android:defaultValue="true" />
+    </PreferenceCategory>
+</PreferenceScreen>

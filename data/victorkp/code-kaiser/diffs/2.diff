diff --git a/data/victorkp/code-kaiser/diffs/diff-processor.save b/data/victorkp/code-kaiser/diffs/diff-processor.save
index a6b93de..91e6519 100644
Binary files a/data/victorkp/code-kaiser/diffs/diff-processor.save and b/data/victorkp/code-kaiser/diffs/diff-processor.save differ
diff --git a/data/victorkp/code-kaiser/pr/1.status b/data/victorkp/code-kaiser/pr/1.status
index 1692b28..7efa995 100644
--- a/data/victorkp/code-kaiser/pr/1.status
+++ b/data/victorkp/code-kaiser/pr/1.status
@@ -1,12 +1,12 @@
 {
+   "branch_head" : "feature/json-configs",
+   "pr_creator" : "victorkp",
+   "merge_status" : "allowed",
    "pr_merger" : "victorkp",
+   "pr_name" : "Feature/json configs",
+   "recheck_time" : 0,
    "pr_sha" : "9a1708233f32ee513e9c8c2eedb143bd6f5bdb57",
    "branch_base" : "develop",
-   "pr_name" : "Feature/json configs",
-   "merge_status" : "blocked",
-   "pr_status" : "merged",
-   "pr_creator" : "victorkp",
-   "branch_head" : "feature/json-configs",
-   "status_message" : "PR has 1 of 2 needed approvals",
-   "recheck_time" : 0
+   "status_message" : "",
+   "pr_status" : "merged"
 }
diff --git a/data/victorkp/code-kaiser/repo.config b/data/victorkp/code-kaiser/repo.config
index d82c4dc..b9bc845 100644
--- a/data/victorkp/code-kaiser/repo.config
+++ b/data/victorkp/code-kaiser/repo.config
@@ -1,6 +1,6 @@
 {
     "github_token"     : "49762f6746e01efaa22e7fc57b807619f550813f",
-    "reviewers_needed" : 2,
+    "reviewers_needed" : 1,
     "blocking_enabled" : 1,
     "blocking_timeout" : 120
 }
diff --git a/lib/CodeKaiser/ChartGenerator.pm b/lib/CodeKaiser/ChartGenerator.pm
index c1a203f..0669bdf 100755
--- a/lib/CodeKaiser/ChartGenerator.pm
+++ b/lib/CodeKaiser/ChartGenerator.pm
@@ -4,7 +4,8 @@
 
     use GD::Graph::Map;
     use GD::Graph::pie;
-    use Storable;
+    use JSON;
+    use Text::Diff::Parser;
     use strict;
     use warnings;
 
@@ -16,6 +17,8 @@
     @EXPORT      = ();
     @EXPORT_OK   = qw(chart_hotspot_from_file chart_hotspot_from_struct);
 
+    my $JSON = JSON->new->pretty;
+
     ## Make a chart in high and low resolution
     ## as well as HTML map for code hotspot files,
     ## using the hash reference returned from
@@ -111,11 +114,21 @@
 
         my ($save_file, $output_dir) = @_;
 
-        # Retrieve the 'files' structure which contains hotspot scores
-        my $last_save_hash = retrieve($save_file);
-        my $files          = $$last_save_hash{files};
+        open (my $SAVE, "<$save_file") or die "Could not open diff processor's save file: $!";
+        my $file_text = read_file($SAVE);
+        close($SAVE);
+
+        my $last_save_hash = $JSON->decode($file_text);
+
+        # Bad save files are removed
+        if(!$last_save_hash) {
+            unlink($save_file);
+            return;
+        }
 
-        chart_hotspot_from_struct($files, $output_dir);
+        # Retrieve the 'files' structure which contains hotspot scores,
+        # and chart based on that
+        chart_hotspot_from_struct($$last_save_hash{files}, $output_dir);
     }
 
     1;
diff --git a/lib/CodeKaiser/DiffProcessor.pm b/lib/CodeKaiser/DiffProcessor.pm
index 27bb31b..38466e4 100755
--- a/lib/CodeKaiser/DiffProcessor.pm
+++ b/lib/CodeKaiser/DiffProcessor.pm
@@ -4,7 +4,7 @@
 
     use File::Slurp;
     use Text::Diff::Parser;
-    use Storable;
+    use JSON;
     use strict;
     use warnings;
 
@@ -18,6 +18,8 @@
     @EXPORT      = ();
     @EXPORT_OK   = qw(process_diffs);
 
+    my $JSON = JSON->new->pretty;
+
     ## Process diff files in a directory, using
     ## a specified file as a temp-save file, 
     ## and returning a processed structure of
@@ -36,10 +38,20 @@
 
         # Load previously processed statistics, if save file exists
         if(-f $save_file) {
-            my $last_save_hash = retrieve($save_file);
-
-            $last_diff_processed = $$last_save_hash{last_diff_processed};
-            %files               = %{$$last_save_hash{files}};
+            open (my $SAVE, "<$save_file") or die "Could not open diff processor's save file: $!";
+            my $file_text = read_file($SAVE);
+            close($SAVE);
+
+            my $last_save_hash = $JSON->decode($file_text);
+
+            # If save file was bad, then remove it, otherwise
+            # start from that save file's checkpoint
+            if(!$last_save_hash) {
+                unlink $save_file;
+            } else {
+                $last_diff_processed = $$last_save_hash{last_diff_processed};
+                %files               = %{$$last_save_hash{files}};
+            }
         }
 
         scalar(@_) == 3 or die "Required parameters: <diff-directory> <save-file>\n";
@@ -153,9 +165,11 @@
             $files{$f}{hotspot_score} = $files{$f}{changes_score} * $files{$f}{pr_count}**2;
         }
 
-        # Store everything to save file
-        store({ last_diff_processed => $last_diff_processed,
-                 files               => \%files }, $save_file);
+        # Store everything to save file, in JSON format
+        open (my $SAVE, ">$save_file") or die "Could not open diff processor's save file: $!";
+        print $SAVE $JSON->encode({ last_diff_processed => $last_diff_processed,
+                                    files               => \%files } );
+        close($SAVE);
 
         return \%files;
     }
